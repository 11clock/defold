package dmProtoBind;

import "ddf/ddf_extensions.proto";
import "ddf/ddf_math.proto";

option java_package = "com.dynamo.cr.protobind.proto";
option java_outer_classname = "ProtoBind";

message SimpleMessage
{
    required int32 a = 1;
    required float b = 2;
    required string s = 3;
}

message NestedMessage
{
    required SimpleMessage msg = 1;
    required int32 x = 2;
}

message NestedNestedMessage
{
    required NestedMessage nested = 1;
}

message ListMessage
{
    repeated SimpleMessage messages = 1;
}

message OptionalAndDefaultValueMessage
{
    optional int32 x = 1;
    optional int32 y = 2 [default = 123];
    optional SimpleMessage msg = 3;
}

message NodeDesc
{
    enum Type
    {
        TYPE_BOX  = 0;
        TYPE_TEXT = 1;
    }

    enum BlendMode
    {
        BLEND_MODE_ALPHA     = 0;
        BLEND_MODE_ADD       = 1;
        BLEND_MODE_ADD_ALPHA = 2;
        BLEND_MODE_MULT      = 3;
    }

    required dmMath.Vector4 position = 1;
    required Type       type         = 2;
    optional BlendMode  blend_mode   = 3 [default = BLEND_MODE_ALPHA];
    optional string     text         = 4;
}

message SceneDesc
{
    optional uint32      reference_width         = 1 [default = 960];
    optional uint32      reference_height        = 2 [default = 640];
    repeated NodeDesc    nodes                   = 3;
}

/*
   When parsing messages with TextFormat and DynamicMessage.Builder
   the value for an optional message field that in turn contains
   a repeated list of messages message.getField(fd) above will return
   a value of Message type. In order to circumvent this problem we
   create a RepatedNode with an empty list.
   This should be expected behavior (empty list). Perhaps a bug in protobuf?
 */
message DynamicRepeatedInOptionalMessage
{
    repeated SimpleMessage messages = 1;
}

message DynamicRepeatedInOptionalMessageContainer
{
    optional DynamicRepeatedInOptionalMessage m = 1;
}
