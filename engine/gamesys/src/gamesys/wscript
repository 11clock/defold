#! /usr/bin/env python
import os

def configure(conf):
    conf.sub_config('test')

def build(bld):
    resource = bld.new_task_gen(features = 'cxx cstaticlib ddf embed',
                                includes = '. ../../proto',
                                proto_gen_py = True,
                                proto_gen_java = True,
                                protoc_includes = '../../proto',
                                # NOTE: default/... is hardcoded. How to solve?
                                classpath=bld.env['DYNAMO_HOME'] + '/ext/share/java/protobuf-java-2.3.0.jar' + os.pathsep + bld.env['DYNAMO_HOME'] + '/share/java/ddf.jar',
                                target = 'gamesys',
                                ddf_jar = 'gamesys.jar',
                                embed_source='../../content/materials/gui.vpc ../../content/materials/gui.fpc ../../content/materials/sprite.vpc ../../content/materials/sprite.fpc ../../content/materials/tile_map.vpc ../../content/materials/tile_map.fpc')

    resource.find_sources_in_dirs(['.', 'resources', 'components', '../../proto'])
    bld.add_group()

    classpath = [bld.env['DYNAMO_HOME'] + '/ext/share/java/protobuf-java-2.3.0.jar',
                 bld.env['DYNAMO_HOME'] + '/share/java/ddf.jar',
                 bld.env['DYNAMO_HOME'] + '/ext/share/java/vecmath.jar',
                 'default/src/gamesys/gamesys.jar']

    bld.new_task_gen(features='javac seq',
                     classpath=os.pathsep.join(classpath),
                     source_root='../java')
    bld.env["JAVACFLAGS"] = '-g'

    bld.add_group()
    bld.new_task_gen(features='jar seq',
                     basedir='../java',
                     destfile='tile.jar')
    bld.install_files('${PREFIX}/share/java', 'tile.jar')

    doc_files = ['../../proto/gamesys_ddf.proto',
        '../../proto/physics_ddf.proto',
        '../../proto/camera_ddf.proto',
        '../../proto/sprite_ddf.proto',
        '../../proto/tile_ddf.proto',
        'gamesys_script.cpp']
    bld.new_task_gen(source = ' '.join(doc_files),
                     target = 'gamesys_doc.sdoc',
                     rule = '${SCRIPT_DOC} ${SRC} ${TGT}')

    bld.new_task_gen(source = ' '.join(doc_files),
                     target = 'gamesys_doc.json',
                     rule = '${SCRIPT_DOC} -t json ${SRC} ${TGT}')

    bld.add_group()
    bld.add_subdirs('test')

    bld.install_files('${PREFIX}/include/gamesys', 'gamesys.h')
    bld.install_files('${PREFIX}/share/proto', '../../proto/physics_ddf.proto')
    bld.install_files('${PREFIX}/share/proto', '../../proto/gui_ddf.proto')
    bld.install_files('${PREFIX}/share/proto', '../../proto/gamesys_ddf.proto')
    bld.install_files('${PREFIX}/share/proto', '../../proto/model_ddf.proto')
    bld.install_files('${PREFIX}/share/proto', '../../proto/mesh_ddf.proto')
    bld.install_files('${PREFIX}/share/proto', '../../proto/sprite_ddf.proto')
    bld.install_files('${PREFIX}/share/doc', 'gamesys_doc.sdoc')
    bld.install_files('${PREFIX}/share/doc', 'gamesys_doc.json')
