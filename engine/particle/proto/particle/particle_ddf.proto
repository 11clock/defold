package dmParticleDDF;

import "ddf/ddf_extensions.proto";
import "ddf/ddf_math.proto";

option java_package = "com.dynamo.particle.proto";
option java_outer_classname = "Particle";

enum EmitterType
{
    EMITTER_TYPE_SPHERE = 0 [(displayName) = "Sphere"];
    EMITTER_TYPE_CONE   = 1 [(displayName) = "Cone"];
    EMITTER_TYPE_BOX    = 2 [(displayName) = "Box"];
};

enum PlayMode
{
    PLAY_MODE_ONCE  = 0 [(displayName) = "Once"];
    PLAY_MODE_LOOP  = 1 [(displayName) = "Loop"];
}

enum EmissionSpace
{
    EMISSION_SPACE_WORLD    = 0 [(displayName) = "World"];
    EMISSION_SPACE_EMITTER  = 1 [(displayName) = "Emitter"];
}

message SplinePoint
{
    required float x = 1;
    required float y = 2;
    required float t_x = 3;
    required float t_y = 4;
}

enum EmitterKey
{
    EMITTER_KEY_SPAWN_DELAY         = 0 [(displayName) = "Spawn Delay"];
    EMITTER_KEY_SIZE_X              = 1 [(displayName) = "Size X"];
    EMITTER_KEY_SIZE_Y              = 2 [(displayName) = "Size Y"];
    EMITTER_KEY_SIZE_Z              = 3 [(displayName) = "Size Z"];
    EMITTER_KEY_PARTICLE_LIFE_TIME  = 4 [(displayName) = "Particle Life Time"];
    EMITTER_KEY_PARTICLE_SPEED      = 5 [(displayName) = "Particle Speed"];
    EMITTER_KEY_PARTICLE_SIZE       = 6 [(displayName) = "Particle Size"];
    EMITTER_KEY_PARTICLE_RED        = 7 [(displayName) = "Particle Red"];
    EMITTER_KEY_PARTICLE_GREEN      = 8 [(displayName) = "Particle Green"];
    EMITTER_KEY_PARTICLE_BLUE       = 9 [(displayName) = "Particle Blue"];
    EMITTER_KEY_PARTICLE_ALPHA      = 10 [(displayName) = "Particle Alpha"];
    EMITTER_KEY_COUNT               = 11;
}

enum ParticleKey
{
    PARTICLE_KEY_SCALE      = 0 [(displayName) = "Particle Scale"];
    PARTICLE_KEY_RED        = 1 [(displayName) = "Particle Red"];
    PARTICLE_KEY_GREEN      = 2 [(displayName) = "Particle Green"];
    PARTICLE_KEY_BLUE       = 3 [(displayName) = "Particle Blue"];
    PARTICLE_KEY_ALPHA      = 4 [(displayName) = "Particle Alpha"];
    PARTICLE_KEY_COUNT      = 5;
}

enum ModifierType
{
    MODIFIER_TYPE_ACCELERATION  = 0 [(displayName) = "Acceleration"];
    MODIFIER_TYPE_DRAG          = 1 [(displayName) = "Drag"];
    MODIFIER_TYPE_RADIAL        = 2 [(displayName) = "Radial"];
}

enum ModifierKey
{
    MODIFIER_KEY_MAGNITUDE      = 0 [(displayName) = "Magnitude"];
    MODIFIER_KEY_ATTENUATION    = 1 [(displayName) = "Attenuation"];
    MODIFIER_KEY_COUNT          = 2;
}

message Modifier
{
    required ModifierType   type            = 1;
    optional uint32         use_direction   = 2 [default = 0];
    optional dmMath.Point3  position        = 3;
    optional dmMath.Quat    rotation        = 4;

    message Property
    {
        required ModifierKey        key     = 1;
        repeated SplinePoint        points  = 2;
        optional float              spread  = 3 [default = 0.0];
    }
    repeated Property       properties      = 5;
}

// NOTE: Enum values must correspond to the enum values in XXX.cpp
enum BlendMode
{
    BLEND_MODE_ALPHA     = 0 [(displayName) = "Alpha"];
    BLEND_MODE_ADD       = 1 [(displayName) = "Add"];
    BLEND_MODE_ADD_ALPHA = 2 [(displayName) = "Add Alpha"];
    BLEND_MODE_MULT      = 3 [(displayName) = "Multiply"];
}

enum ParticleDirection
{
    PARTICLE_DIRECTION_NONE = 0 [(displayName) = "None"];
    PARTICLE_DIRECTION_INITIAL_DIRECTION = 1 [(displayName) = "Initial Direction"];
}

message Emitter
{
    optional string             id                  = 1 [default = "emitter"];
    required PlayMode           mode                = 2;
    optional float              duration            = 3 [default = 0];

    required EmissionSpace      space               = 4;
    required dmMath.Point3      position            = 5;
    required dmMath.Quat        rotation            = 6;

    required string             tile_source         = 7 [(resource)=true];
    required string             animation           = 8;
    required string             material            = 9 [(resource)=true];
    optional BlendMode          blend_mode          = 10 [default = BLEND_MODE_ALPHA];
    optional ParticleDirection  particle_direction  = 11 [default = PARTICLE_DIRECTION_NONE];
    optional uint32             inherit_velocity    = 12 [default = 0];

    required uint32             max_particle_count  = 13;

    required EmitterType        type                = 14;

    message Property
    {
        required EmitterKey         key     = 1;
        repeated SplinePoint        points  = 2;
        optional float              spread  = 3 [default = 0.0];
    }
    repeated Property           properties          = 15;

    message ParticleProperty
    {
        required ParticleKey    key     = 1;
        repeated SplinePoint    points  = 2;
    }
    repeated ParticleProperty   particle_properties = 16;

    repeated Modifier           modifiers           = 17;
}

message ParticleFX
{
    repeated Emitter emitters = 1;
}