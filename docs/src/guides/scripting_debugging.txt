Scripting & Debugging
=====================

There are three types of scripts in Defold:

* logic scripts (.script)
* gui scripts (.guiscript)
* render scripts (.renderscript)

All types are based on the link:http://www.lua.org/[Lua] scripting language.
We have extended Lua with Defold-specific functions, check the link:#reference:[reference] for a list of what's available.

Auto-Completion
---------------

To fill out function names, you can use *Ctrl+Space* (*Command+Space* for Mac users) to bring up a list of the functions matching what you are typing.

Debugging
---------

The simplest way to debug your game in Defold is to use link:http://en.wikipedia.org/wiki/Debugging#Techniques[print debugging].
The technique is basically to print out the values of different variables while the game is running.
If a game object without a script acts weird, you can just attach a script to it with the sole purpose of debugging.

By using the Lua +print+ function, you can print to the Console view in the Editor.
If you rather have the text appear on screen you can post the link:#reference:render/draw_text[+draw_text+] message to the +@render+ socket:

[source,lua]
----
msg.post("@render:", "draw_text", {text = "My value: " .. my_val, position = vmath.vector3(200, 200, 0)})
----

When you have problems with spatial calculations, like movement and physics, you can also draw lines on the screen by posting the link:#reference:render/draw_line[+draw_line+] message to the +@render+ socket:

[source,lua]
----
msg.post("@render:", "draw_line", {start_point = my_start, end_point = my_end, color = my_color})
----
