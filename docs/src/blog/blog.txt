:max-width: 45em

Script Properties Design
------------------------
_April 15, 2012_

We have started designing how the script properties should work.
Now we want you to join in and criticize our decisions, so we can make even better ones.
The document is right link:https://docs.google.com/document/d/18u_9Jhuuj-NEHCVKTH7gj127Hs62fT1KKwecRRbkz44/edit[here], anybody can comment.

We are very excited to see how this works out.
Hopefully we can do this (or something better) for all upcoming features.
Transparency and knowledge sharing ftw!

/Team Defold

Beta Plans
----------
_April 12, 2012_

We have now gone through everything we want in place for the Beta release due June.
In general, we will focus more on bugs and annoyances than new features.
We value the feedback you provide and are open to change our plans, should anything come up.
Our planning is very dynamic so expect anything to change.

Some new features are too important to postpone.
We are excited to test a new experimental approach to designing these.
During the years, we have worked out a pretty robust way of designing, implementing and testing new features.
This time we want to try involving you in the initial design, to collect feedback as early as possible.
How this will happen exactly is not yet clear, but probably something like a publicly accessible Google doc where you can add comments.
Let's see how it turns out! :)

Script Properties
~~~~~~~~~~~~~~~~~

For game objects that use the same logic script, it is common that you want their behaviors to differ slightly from each other.
This feature is the ability to tweak scripts with different initial values to basically reuse the logic for different configurations.
A practical example would be an enemy that has twice the health of another, but the same general behavior.

iOS
~~~

We are working on a smooth work-flow of testing the game on an iOS device.
This would have the same features as when running it on your local machine, like hot-reloading and profiling.
It obviously includes full touch support in the input system.

Auto-Completion and Tags
~~~~~~~~~~~~~~~~~~~~~~~~

Some properties rely on the user to specify the exact same IDs in different places.
This is error-prone and we are looking at different ways to support auto-completion and tags, commonly found in web interfaces.
A related feature is improved auto-completion when scripting.

Improved Tile Map Editing
~~~~~~~~~~~~~~~~~~~~~~~~~

The current painting of tiles is very rudimentary and would benefit from more features, like copy-paste and the ability to move painted tiles.

There are of course a ton of bugs to fix as well, so we have plenty to do this spring!

/Team Defold

Release 1.1.4
-------------
_April 11, 2012_

We have just released another batch of bug fixes.
Thanks to all you wonderful game devs who give us feedback in the link:http://defold.userecho.com/[forums]!
We really hope you feel it pays off to do this, as we try to attend to everything as quickly as possible.
Don't forget to use your votes if you think we are fixing the wrong things!

Automatic Update Failing on Windows
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

There is an issue with the automatic update of the Defold Editor on Windows.
The symptom is that a new release is discovered and installed, but the application is not restarted.
At every successive boot of the application, the new release will again be detected, but not installed.

A workaround to this is to simply remove the installation and download the editor again.
Just don't forget to *sync your files* before you do this as your changes would otherwise be deleted.
Sorry for the inconvenience, we are working on finding the cause.

Fixed Bugs
~~~~~~~~~~

* Cycles in the scene graph were not detected
* Some component types (e.g. sound) could not be added to game objects as files
* Images with indexed colors could not be used as textures and tile sources
* Crash on Windows when debug-printing vmath types (e.g. vector3)
* Crash for certain setups of tile map layers
* Rotated tile maps had incorrect broad-phase AABBs when used for collisions
* More minor documentation bugs

We will have a planning session tonight to outline what should go into the beta.
The results will be posted here tomorrow, so stay tuned!

/Team Defold

Release 1.1.3
-------------
_April 4, 2012_

Failing Invitations & Safari
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you have received an invitation mail and you use Safari, the provided link will probably have taken you to the front page of the site.
You can still register by going to the Dashboard in the upper right.
Login through Google and supply the key when requested.
The key is the part of the invitation link after +login:+, e.g. +abcd+ if the link was +http://defold.com/#login:abcd+.
We have added instructions about this in the invitation mails.
This is a temporary work-around until we have fixed the colon-problem in the links.

Issues
~~~~~~

We are really happy to see *Fredrik Z* igniting the link:http://defold.userecho.com/[feedback-section] with life!
We really hope the rest of you will start to report your issues there too.
No issue is too small to be reported.
No question is too stupid to be asked.

Bugs fixed in this release are:

* Errors when opening a project for the first time
* Incorrect type (number instead of hash) for collision groups in reference docs
* Out-dated instructions in the link:#!tutorials:side_scroller[Side-Scroller Tutorial]
* The bonus star was not displayed correctly in the tutorial after setting _Default Animation_

The Windows-firewall problem described in the last post could not be reproduced.
Please report this if it ever happens again.

Our DNS host FSData says the connection problems a few days ago should be completely fixed now.
Since we are still very unsatisfied with how they handled the situation, we are looking for a new host now.
It will probably be a few months before we make the switch, please let us know about any connection problems you might experience.

We hope you like our updates so far. Let us know how we could improve if not!

/Team Defold

Release 1.1.2: Another Important Fix & Connection Problems
----------------------------------------------------------
_April 2, 2012_

Another bug made any new user since the alpha release and until 18:44 CET today have an editor with incorrect default preferences.
This would manifest itself as the game failing to start.
This was fixed in release 1.1.2.
Anyone who downloaded the editor after 18:44 CET (or upgraded the editor when it starts up) won't be affected.

We have also experienced lots of random problems from our DNS provider.
These problems, which caused none of our servers to be reachable, manifested themselves in many different ways.
Examples are the web site not being reachable, failures to create new projects and branches, etc.
One thing they all had in common was that they would go away after a minute or two.

A few new bugs was also found when testing:

* Opening a project from a clean installation of the editor will result in an error message (only on Mac):
  "GET http://cr.defold.se:9998/users/ returned a response status of 405".
  This only happens once and a workaround is to hit *Cancel* and reconnect. We will start to fix this soon.
* When creating a branch in the editor on Windows, a Windows firewall might kick in and make the branch creation fail.
  A workaround (until we raise the timeout) is to just try again after you give Defold.exe permissions to connect.

As we are working out how to best communicate the status of our service, please follow us on twitter: link:http://twitter.com/DefoldEngine[@DefoldEngine].
For the time being, we will post everything there as it happens.

More info about the issues
~~~~~~~~~~~~~~~~~~~~~~~~~~

The first preference bug would make the editor start the game against our server instead of your local machine.
We previously had a service where you would keep your files on our server, but work with them and test them like they were on your local machine.
(A copy of your files are always kept on our servers, this just concerned which ones you would work on).
We disabled this service because of security issues before releasing the alpha version.
The reason we didn't detect the bug was that we only tested previous editor installations with different stored preferences than the default ones.
This made us happily connect to our local machines each time we tested a newer editor.
From now on, we will test clean installations on all platforms (Mac/Win/Linux) before making new releases.
We agree this seems very obvious in hindsight. It also helped us spot the bugs mentioned above. :)

The DNS instability was resolved by our provider (FS-data) after 10 hours and was very poorly handled by them.
We were in contact with them several times during the day by mail and phone, without ever given answers to any of our questions.
We take up-time and system stability very seriously.
We believe that as a service provider (like ourselves), you should try your utmost detect your errors before your users do.
If (when) you fail to do that, you should try even harder to make sure you never ever repeat that same error again.
This is why we always go on about what we are doing wrong and how we will better ourselves, because that is to us the only way forward.
Since we rely on our providers, we naturally have to make these same demands against them.
The only way we can fix this, is therefore to get these same answers from them or switch provider.
We will get back to you whenever we know which one it will be.
Does any of you know a good DNS provider we could use? :)

Sorry for the problems, but hopefully we will start seeing fewer and fewer of these.
And keep up the great feedback, it's a really fast way to make *everything* better.
And although we love your feedback as it is, please try the feedback button to the left on the web site instead of sending it to us personally, even if you know us really well.
Then others can take part in the discussions or know about the issues as well.
We know it's scary when it's all empty and clean, but you get to say FIRST! :)

/Team Defold

Release 1.1.1: Fix for Mac
--------------------------
_April 1, 2012_

We unfortunately shipped a serious bug with the alpha-release.
It occurred for Mac-users when trying to save files in the editor (obscure error dialog).
There is now a new version (1.1.1) available and it will be automatically installed the next time you start the editor.

How could this happen?
~~~~~~~~~~~~~~~~~~~~~~

We use a version control system called _git_ for sharing the projects and hastily stripped and bundled this during the week for the alpha release.
The problem was that we packaged it on a dev machine which had a non-standard setup of components.
This caused missing dependencies for users with standard machines.

How will this not happen again?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

We have a vanilla mac which we will make as vanilla as possible and will test all further versions on there before releasing.
We are still learning when it comes to deploying multi-platform and this was something we had missed.

Sorry for the hassle!

/Team Defold

Release 1.1.0: Alpha!
---------------------
_April 1, 2012_

After lots of work and late nights, we have finally arrived at the alpha stage.
Although there is plenty more to add and fix, Defold is now functional to use for game development.

Big thanks to everyone who helped us get here!

Alpha and Beta Access
~~~~~~~~~~~~~~~~~~~~~

You, our beloved pre-alpha Defolders, have been given five invitations each.
You can use them in the dashboard to invite your friends.
Each invited person will be given less invitations to hand out and the whole system gracefully limits itself.
There's always a chance of receiving more invitations by contacting us.

Invited people can set up a free account immediately.
We have also provided an open application for beta access on the front page.
Once we reach the beta phase, we will start to draw from this queue as our capacity grows.

We will close down the old top-secret communication channels and urge you all to start using the feedback button to the left on the web site instead.

Onwards and upwards!

/Team Defold

Update: Invitations & Beta Registration
---------------------------------------
_March 26, 2012_

We are currently working extremely hard for the Alpha release due next weekend.
This is when Defold will be publicly unveiled and we are trying to get everything as polished as possible in time for this major event.

Going into Alpha means that more people will be invited to use the service.
You, our beloved pre-alpha users, will also receive a number of invitations to hand out.
We will still not charge anything during the Alpha phase.
We are still working on the details of our licensing model, it will be thoroughly explained by next weekend.

Since we have so much to do, this update post will be rather brief, at least relatively how much it contains.

Invitations & Beta Registration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Starting next weekend, anyone can register for Beta access on the link:/[front page].
In addition to this we, as well as you, can invite a limited amount of interested people for Alpha access.
We can't open the gates completely yet, as we can't handle too much support at the same time.
That might make us sacrifice the quality of the support, and we want every user to have the best possible experience.

Local Branches for Windows
~~~~~~~~~~~~~~~~~~~~~~~~~~

We fixed the issues involving using local branches on Windows.
We have also bundled both Java and OpenAL (which we use for sound) with the application so no need to install separate software.

New Names
~~~~~~~~~

We have not been entirely happy with the naming of some concepts in the Defold service and decided to fix the worst ones.
This is what has changed:

* _Sprite2_ => _Sprite_ (Sprite2 was a new format that has now completely replaced the old one)
* _Spawn Point_ => _Factory_
* _Tile Set_ => _Tile Source_
* _Tile Grid_ => _Tile Map_

We hope you agree that the new names are easier to understand.

Other Features
~~~~~~~~~~~~~~

* Browsing for resources is filtered by extension
* Optimized performance in the Scene Editor
* Cleaned Preferences from settings only used for internal debugging
* A progress bar is shown when creating a branch
* Improved error handling in the pipeline
* Tabs are automatically shown when building/reloading to show progress and errors
* Physics can be scaled for increased numerical precision
* More link:#!documentation:[documentation]
** link:#!guide:scripting_debugging[Scripting & Debugging]
** link:#!guide:message_passing[Message Passing]
** link:#!guide:reload[Hot Reloading]
** link:#!guide:physics[Physics]
** link:#!guide:tiles[Tiles]
** link:#!guide:game_project[game.project]
* Web site footer
** link:#!content:story[Defold Story]
** link:#!content:eula[Terms of Service]
** Support links
** Social links

Fixed Bugs
~~~~~~~~~~

* Rebuild did not rebuild all content
* Renaming empty directories did not work
* Safari version (web) was not correctly checked
* Some menu items pointed to removed functionality (items were removed)
* Errors and warnings in Problems and Error Log tabs
* Name of user was missing in web page after registration
* Problems when deleting layers from tile maps
* Tiles were not properly updated (graphics/physics) when the textures were modified externally
* Icon was missing for embedded shapes in the Outline view
* Various issues with manipulators in the Scene Editor
** Not properly updated when adding/removing objects
** Rotation manipulator did not behave correctly for 3D rotations
** Scale manipulators seemed to be in world space but acted in local space
** The manipulation selection in the Scene-menu was not properly updated
* Various inconsistencies when selection was updated as a result of something else (e.g. undo)
* Animations and collision groups in tile sources could not be copy-pasted
* Palette and brush was not correctly rendered (transparency) for tile maps
* Changing the properties of a layer made its tiles seem like they didn't belong to it (dimmed out)
* game.project without a final blank line could not be read by the engine
* Tile maps with multiple layers did not get correct collision shapes
* Triggers did not collide correctly with tile maps

Known Bugs
~~~~~~~~~~

* Kinematic and dynamic collision objects completely within the collision of a tile map won't generate collision responses
* Box selecting many objects on Windows has poor performance (hitches)
* Tiles with different collision groups are not properly stitched (might result in bumps or stops when sliding objects over them)


Mini-Update: Bug Fixes
----------------------
_March 5, 2012_

We found a few issues with drag and drop that we felt were important to fix.
With them came a list of other useful fixes as well.
This release includes:

* More stable drag and drop (errors would occur when dropping items onto themselves or in empty areas)
* We are testing another service for reporting issues and giving feedback called User-Echo.
  You can try it out by clicking the Feedback-tab to the left in the web site.
  There is a link to the service in the footer called "Forum".
  We also added a link from the editor at *Help > Feedback...*
* Added a link to the documentation in a similar manner at *Help > Documentation...*
* The editor will now check for updates automatically on start-up.
  So this would be the last one you manually update to.
* Links to download the editor from the website was missing, they have been added in the dashboard.
* The status of files (modified, added, etc) in the project explorer was not updated after commit.
* When spheres and polygon (box) collision shapes intersected much enough, the engine would experience computation failures with severe frame drops.
* The errors when running the game (starting with "ERROR:DDF: Name clash.") have been removed.
* We have changed some functions related to node properties in gui scripting to be more compatible with each other (mostly by accepting both vector3 and vector4 as arguments).

Right now we are aiming to be ready to take in more external users in a
week, so expect more great updates in not too much time!
To be able to do this however, we need all of you to move over to the local
branches. We need to switch off our content server in order to open up the
firewall, since that server has no adequate authorization mechanism in
place. We will contact you about this individually though, so await further
instructions. :)

/Team Defold

Mini-Update: Copy-Paste & Drag 'n Drop
--------------------------------------
_March 3, 2012_

We have just made another smaller release, to fix a few lingering issues from the last one.
Copy/cut/paste has been slightly changed, drag and drop in the outline view has been implemented.
The Tile Set Editor failed to open from the last release, this has also been fixed.

Copy/cut/paste
~~~~~~~~~~~~~~

When you select an item in the outline, the parent of that item will be used as target for the paste operation.
So if you select an item and hit copy-paste, that item will essentially be duplicated as another item under the same parent.

Drag And Drop
~~~~~~~~~~~~~

You can now drag around items in the outline.
The only really useful thing at the moment is to use it for rearranging the game object hierarchies, like making a game object the child of another game object.
It can also be used to move shapes between different collision objects, but that is a rare use case.
It's great to have it in place though, since it will be used for more things later on.

That's it for this time!

/Team Defold

Update: Collection Editing & Local Branches
-------------------------------------------
_February 28, 2012_

Collection Editing
~~~~~~~~~~~~~~~~~~

We have now finally ported the functionality of the old Collection Editor to the Scene Editor.
This imposes a few changes, but all for the better we hope.
Our ultimate goal is to have all the visual editing done in the Scene Editor so everything behaves the same way, whatever resource you are editing.

Condensed Outline
^^^^^^^^^^^^^^^^^

In an effort to simplify the hierarchical content in the outline, we have tried to remove as many redundant items as possible.
An example of this would be when you added a component to a game object, which resulted in one item containing the component id and a sub-item with all the specific component properties.
Such items have now been merged into one, with all of the properties available in the same place.
This should hopefully make it quicker to find the data you are looking for.

((((
image::images/blog/20120228/one_item_per_level.png["Merged properties", align="center"]
((((

Copy-Paste
^^^^^^^^^^

We have now implemented copy-paste (and cut of course) in the Scene Editor.
This will hopefully make it easier to build things faster.
We have also enabled multi-selection in the Outline View and box-selection in the Scene View.
Drag-and-drop, which is related to this has yet to be implemented at a later time.

Filtered Visualization
^^^^^^^^^^^^^^^^^^^^^^

You can now select which types of objects to be shown in the Scene View through *Scene > Show*.
We added the most common ones, but let us know if there are any we have missed.

((((
image::images/blog/20120228/filtering.png["Visualization filtering", align="center"]
((((

Parenting Game Object Instances
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

To make a game object become the parent of another game object inside a collection, you would previously select both game objects in a specified order and use the Parent-command.
Our goal is for this to be done by simply clicking the child game object and dragging it onto the parent.
Until drag-and-drop has been implemented, you instead have to cut the child, then select the parent and paste the child, which will make it appear at a level below the parent.
We realize that this is not really intuitive, but it's just a temporary solution.
This also means that if you select a game object instance and hit copy-paste, the copy will actually appear below the original item as well.
This can currently be considered a design bug.
As soon as drag-and-drop has been implemented, this will of course be fixed and work much better.

((((
image::images/blog/20120228/hierarchy.png["Game Object Hierarchy", align="center"]
((((

Colored Axis
^^^^^^^^^^^^

We have realized that it's been a bit hard to navigate around in bigger collections, since there is no reference point of where the center (origo) is.
We have colored the base axis to give you a point of reference where the different coordinates are zero.
The colors are red, green and blue and correspond to x, y and z respectively.
This comes from the common acronym RGB and is a standard in most 3D software.

((((
image::images/blog/20120228/axis_color.png["Colored Axis", align="center"]
((((

Local Branches
~~~~~~~~~~~~~~

*NOTE!* This feature is currently only available to non-Windows users.
We have an issue on the Windows platform that we haven't resolved yet, sorry for the inconvenience!

There is a new setting in the preferences (*File > Preferences > Defold > Use local branches*) which controls whether the branches you create are stored on your own machine or on our server.

((((
image::images/blog/20120228/local_branch.png["Local Branch", align="center"]
((((

This is in other words optional, but we think the benefits of working on a local branch are better than when working against the server.
Connecting to the project, opening files, building and running the game are all faster for a local branch.
Since you have the files in your file system, you can also open them with other editors (like image and sound editors) and modify them without having to move them back and forth.

There is also a new menu item in the context menu of the Project Explorer called *Show in file browser*, which you can use to locate the files on your machine.
Whenever you edit the files this will be detected by the editor so it will stay updated.
Note though that there might be a small delay before it is.

To start using local branches, you should first synchronize all of your current changes.
Then you check the box *Use local branches* in the preferences, as described above.
Reconnect to your project (*File > Open Project*) and create a new branch.
Note that creating a local branch might take a while as all files are downloaded to your local machine at once.

Bundled Engine
~~~~~~~~~~~~~~

We have finally bundled the engine (the application used to run your games) with the editor.
This means that you don't have to synchronize your branch anymore to receive the latest engine, it will be updated when you update the editor.

Fixed Bugs
~~~~~~~~~~

* When adding game objects to collections, they were always placed at the center of the world instead of the center of the camera.
* A game object could not spawn another game object if it was deleted in the same frame.
* Better documentation of the go.delete-function.
* Missing support for *Select All* in the Scene Editor.

Known Bugs
~~~~~~~~~~
* When creating a local branch, it might take a while and there is no progress bar visible.
* There are errors in the editor console starting with "ERROR:DDF: Name clash.". These can be safely disregarded and will be fixed at a later time.

Roadmap
~~~~~~~

We are currently working on the drag and drop feature for the outline view and hope to release it at the end of this week.
The iOS support is also well under way, but there is still more work needed to be done to get the right workflow we are looking for.
The vision is to make the iOS device act just like another screen of your computer, so the configuration and manual steps involved are minimal.

As always, remember to let us know about any suggestions, annoyances, issues, or plain great ideas you might get while using this release.

Thanks for reading!

/Team Defold

Update - Introduction & Spawning
--------------------------------
_January 31, 2012_

The last two weeks we have been busy improving the documentation and implementing a few longed for features.

Introduction
~~~~~~~~~~~~

We have worked hard at writing more documentation and are finally ready to show the new link:#!getting_started:[introduction].
It comes with a new link:#!tutorials:side_scroller[tutorial], which demonstrates tweaking and the construction of game objects.
We hope that you can gain some more insight into our design from the introduction.
Hopefully, most of it should be old news by now but helpful for new users.

Spawning
~~~~~~~~

Due to popular request, we have improved the creation of game objects while running the game.
We have introduced a new function called +factory.create+.
It returns the id of the created game object so it can be used for message passing.
In accordance with this we have also extended the +msg.post+ function to take an id instead of a full url.
When passing an id the following two calls are equivalent:

[source,lua]
----
msg.post(my_id, "my_messasge")
msg.post(msg.url(nil, my_id, nil), "my_message")
----

We have also implemented the abillity to pass custom parameters to the +factory.create+ function, which can be received in the init-function of a script.

To show by example, you can create a new game object like so:

[source,lua]
----
factory.create("#factory", go.get_position(), go.get_rotation(), {my_value = some_value})
----

And then use the +my_value+ parameter in the script of the created game object:

[source,lua]
----
function init(self, params)
    self.my_important_value = params.my_value
    -- use self.my_important_value later
end
----

Note that we assume in the first example that the game object has a spawn point component called +factory+ and that the position and rotation of the original game object is sufficient.
Factory is a new name for the spawn point component we used in the introduction.
We haven't changed the name of the component yet, just the name of the new function.
We are sorry if this is confusing, but in short you should be able to use your spawn point components as usual and just use the new function for triggering them.
We will let you know when we change the name of the actual component.

The biggest benefit of this is the ability of separating the behavior of your newly created game objects without having to rewrite their scripts.
Our plan is to introduce this same feature when adding game objects in a collection, so you can specify different starting values for them too.
We will implement this as soon as it deems necessary.

We have also extended the +go.delete+ function to take an optional id.
This means that you can delete other game objects than the one containing your script.
If you leave out the id, it deletes the game object containing the script, as usual.

[source,lua]
----
go.delete(some_id)
----

Bugs
~~~~

We also managed to fix some more bugs:

. Collision objects didn't contain the group +default+ in their masks by default, which was misleading.
. Fonts didn't have the appropriate _Material_ set by default.
. Positions for components (sprites and collision objects) were specified in 4d instead of 3d, which was confusing.
. The platform template project had some issues resulting from earlier updates.

Roadmap
~~~~~~~

The link:https://docs.google.com/document/d/1I-0Y2zfUjsG-E44gRSxabLXaN19jB6p7EfvwICCcCXk/edit?hl=en_US[roadmap] has been updated and you are most welcome to contribute by commenting on what is important to fix.
Our goal is to involve you in the process of prioritizing what needs to be done.
Please let us know if you see any better way of achieving this.

Hope you like these new features and we look forward to hearing your feedback in the link:http://groups.google.com/group/defold-users?hl=en[user group].

Update - Feature Requests & Bug Reports
---------------------------------------
_January 15, 2012_

We have received a lot of feature requests and bug reports during the last weeks, which we appreciate a lot!
So this week we have taken a break from writing the User Guide and instead focused on resolving as many issues as possible.

We have started to add you who report the issues as correspondents on the bugs, to give you a notification when they are fixed.
Please let us know what you think about that, do you like it or does it get too spammy?

Enable/Disable for Collision Objects
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Collision Object components can now be enabled and disabled through message-passing (see link:#!reference:go/enable[enable] and link:#!reference:go/disable[disable]).
Disabled collision objects are temporarily removed from the physics simulation, which means they don't collide with other objects.

Dynamic collision objects also cease to move the game objects they belong to when disabled.
It is possible to move dynamic collision objects through the script while they are disabled.
Once they are enabled, they will start being simulated again at their new position.

Movable Sprites
~~~~~~~~~~~~~~~

Sprites can now be moved in the Scene Editor (only applies to the new Sprite2 component).
This means that you can put two Sprite2 components in the same game object and move them in relation to eachother.
This should make it easier to build more visually complex game objects.

((((
image::images/blog/20120115/sprite_placement.png["Sprite Placement", align="center"]
((((

((((
image::images/blog/20120115/search.png["Search Lights", align="center"]
((((

Linear Texture Filtering
~~~~~~~~~~~~~~~~~~~~~~~~

To avoid visual artifacts and ensure pixel perfect images, we have previously disabled texture filtering.
Texture filtering typically makes a scaled image blur, instead of becoming pixelated.
This has resulted in other artifacts, specifically when rotating objects, which gave a blocky and almost noisy appearance.

The current solution is to enable texture filtering along with clamping the position of sprites to integer values.
The clamping can be disabled in +game.project+ by including:

----
[sprite]
subpixels = 1
----

This makes the overall visual quality much nicer, but also introduces slight color bleeding in some situations.
We have different ideas on how to improve this further.
For now, we will let it be until it becomes more critical.
Please let us know how the visual quality of your game was affected by this release.
We really hope it will be significantly better.

image::images/blog/20120115/filtering.png["Nearest vs Linear filtering", align="center"]

A related bug to this was that sprites and tile grids appeared to move differently when moving a camera.
The impression was that the sprites would float or hover a bit back and forth in relation to the tile grids.
This should not be an issue anymore.

Bugs
~~~~

Below is a list of the bugs we fixed in this release.

- Z-ordering between tile grids and sprites did not work; sprites were always rendered on top
- Different visualization problems with collision objects in collection editor and scene editor
- The sender-field when receiving collision messages was not set correctly (should be the collision object component causing the collisions)
- The buffer size for sending custom script messages has been increased (it was not enough for very large messages, like save data)
- Blend modes in the GUI system was broken, specifically "add alpha" (known issue remains when blending text nodes)
- After deleting a game object referenced in a collection, opening the collection made the collection editor crash
- After deleting a component referenced in a game object, opening the game object made the scene editor crash
- Two colliding kinematic collision objects ceased to collide after a while
- Missing documentation for camera messages (+set_camera+, +acquire_camera_focus+ and +release_camera_focus+)
- Visual gaps appearing between tiles in a tile grid when moving a camera
- When creating new branches with spaces in their names, different problems would occur (fixed by only allowing valid characters)
- After adding an embedded shape to a collision object, the editor would still warn about the shape-field being empty
- Missing documentation for +sys.get_save_file+
- The tile set-field in Sprite2 components was not updated correctly when referenced tile sets where renamed/moved/deleted
- Cryptic build error when building a Sprite2 component without its default animation empty
- Specifying a spawn point component to spawn the same game object it resides in made the engine crash when loading the game (results in error now)
- When creating embedded collision boxes, the width/height/depth was expected to be half the values (they are actually the full width/height/depth now)

Roadmap
~~~~~~~

We will continue work on the User Guide next.
Don't forget to comment and vote for things in the Roadmap document.
We have updated it a bit to reflect the recent discussions about spawning and tile grid editing.

Hope you enjoy the fixes!

Update - Web Site Face Lift & Script Samples
--------------------------------------------
_January 8, 2012_

Web Site Face Lift
~~~~~~~~~~~~~~~~~~

As you have probably noticed by now, our web site has had a major face lift.
We have also restructured the information a bit, but everything should hopefully be easier to find now.

We have also added two new features to the link:#!dashboard:[dashboard].

The first is that we now use link:http://www.gravatar.com[Gravatar] to supply the avatars for us.
To have your own avatar appear in the dashboard, link:https://en.gravatar.com/site/signup/[register] with Gravatar and setup your avatar there.
We think Gravatar is a great service and hope that it will catch on more.

The second feature is that you can now see the activity in your projects.
Click on a project in the dashboard and the activity is displayed in the lower right.
When you create a project from a template, the activity from that template is currently copied into your new project.
So don't be alarmed if you see unfamiliar activity from us in the Defold-team or Mr. Builder, our former game-dev robot.
We will fix this at some point in the future.

((((
image::images/blog/20120108/project_activity.png["Activity with Gravatars", align="center"]
((((

Script Samples
~~~~~~~~~~~~~~

We have added a few script samples on the link:#!documentation:[documentation] page.
We hope they will both inspire and provide aid in understanding how to make animations and effects using scripting.
There are both samples that deals with gui animation (*HUD*, *Level Complete* and *Main Menu*) and game object animation (*Parallax*).

We have also uploaded videos to Youtube showing the samples in action.
To produce the videos, we used the new video capturing feature we added earlier in the week.
Even the title screen at the beginning of each video was captured in the engine.
The title screens are in fact a single GUI scene that we populate with different data depending on which sample to capture.
This means we don't have to do any video editing when we change the content of the samples, the videos will be ready for upload immediately.
Ask us for details in the user group if you are curious about how to do this yourself.

We have not yet added the script samples as template projects, but we will do that as soon as possible.

Bugs
~~~~

We also had the time to fix a few more bugs that crept up.

- Render was missing from the reference documentation
- vmath.lerp did not accept numbers in addition to vectors and quaternions
- Animations could not be deleted from tile sets

Roadmap
~~~~~~~

Apart from including the script samples as template projects, we will continue with the User Guide next week.
Please, check out the Defold Roadmap we posted in the group for more details.
Remember that you can influence what we should work on by commenting in the document.

We hope you like the new web site! Tell us what you think in the user group!

Update - Video Capture, Fonts, Colors, Tweaks & Bugs
----------------------------------------------------
_January 5, 2012_

Video Capture
~~~~~~~~~~~~~

We are proud to announce that you now can capture videos of your running game from within your scripts!
Certain members of the Defold-team failed to relax during Christmas and instead implemented this excellent feature.
It is controlled through message passing and very easy to use.
Simply do the following in a script when you want to start recording video:

[source,lua]
----
msg.post("@system:", "start_record", { file_name = "test_rec.ivf" } )
----

When you want the recording to end, do:

[source,lua]
----
msg.post("@system:", "stop_record")
----

The messages are explained in more detail in the documentation under link:/#documentation:[Engine].
The recorded file is compressed through link:http://en.wikipedia.org/wiki/VP8[VP8] in the link:http://wiki.multimedia.cx/index.php?title=IVF[IVF] container, which can be uploaded to Youtube as is.
When the time comes, we will add the ability of uploading to Youtube from your scripts too.
This means that you can let players capture their gaming sessions and upload them from inside your game!

If you want to convert the files to a more common format, you can use link:http://www.mirovideoconverter.com/[MiroVideoConverter].
There seems to be a bug when playing these files through VLC, it stops playback around 1 second before the video should end.

We haven't yet had the time to include audio in the captured videos, but we hope that this feature can be of value anyway.
This will of course be fixed in time.

Fonts
~~~~~

We have fixed the font rendering, which has been rather ugly for a while.
We also added the ability to set color and alpha of outlines and shadows from within the GUI editor.
We have not yet had the time to render them properly in the editor preview, but the effects should be visible when running the game.

((((
image::images/blog/20120105/fonts2.png["Fonts in the GUI Editor", align="center"]
((((

((((
image::images/blog/20120105/fonts.png["Fonts in the running game", align="center"]
((((

Background Color
~~~~~~~~~~~~~~~~

It is now possible to set the background color of a game in the game.project file.
This is a work-around until we have fixed this properly, so it will be easier to specify.
To set the color to bright red, include this in your game.project file:

----
[render]
clear_color_red = 1
clear_color_green = 0
clear_color_blue = 0
clear_color_alpha = 0
----

Note that the values should all be between 0-1.
You can also change the background color on the fly in a script by doing:

[source,lua]
----
msg.post("@render:", "clear_color", { color = vmath.vector4(1, 0, 0, 0) } )
----

game.project to scripts
~~~~~~~~~~~~~~~~~~~~~~~

You can now read data from game.project inside your scripts.
This is mostly useful for testing purposes, but can also be used for reading global configuration data.
Below is an example of how to add and read data.

In your game.project file, add:

----
[my_category]
my_value = 1
----

Then you can read the value inside your scripts, like so:

[source,lua]
----
local my_value = tonumber(sys.get_config("my_category.my_value"))
----

This is detailed in the documentation under link:/#documentation:[Script].
Also note that you can read any value from the game.project-file, e.g. "display.width".

Bugs
~~~~

We also fixed some annoying bugs.
Here is a list of what we fixed so far:

- Spawn points with no prototype specified caused ugly build errors
- When browsing for gui-scripts in gui-files, no files would appear
- Rotation and scale were not visualized in the GUI editor
- Files were not automatically saved when building (launching the game)
- Refactoring for tile grids did not work
- Deselecting a running animation in a sprite caused problems
- Issues when selecting manipulators with the mouse in the Scene editor
- Some nodes in the Collection editor seemed like they could be transformed, when they couldn't (e.g. tile grids)
- Missing documentation for physics.ray_cast script function (see documentation under link:/#documentation:[GameSys])
- Ray casts of zero length yielded assert (engine crash)
- Misleading message when launching the game with empty resource paths
- Crash when rendering a GUI with many nodes

Please let us know if there are more bugs in need of urgent remedy.

Roadmap
~~~~~~~

Don't forget to comment on the roadmap we posted in the user-group.
As of now, we are working hard on documentation and an update of the web site, but we are anxious to hear about what you want to be fixed.
Since this update has been very technical, you are most welcome to post in the user-group if anything was unclear or you just like more information.

Hope you like this update!

Update - Lots!
--------------
_December 22, 2011_

It has been almost exactly a whole month since our latest release.
We aim to have a minimal release cycle (a week optimally), which would both let us get immediate feedback and be able to respond to new requests faster.
This time, however, there was simply too much that needed to be done.
To make up for this, we made this release extra fat and juicy, as appropriate for the holidays to come.
A month-long crunch is over and the Defold-team is about to kick back for four entire days!

Sprites, 2nd Edition
~~~~~~~~~~~~~~~~~~~~

We have implemented the basics of the redesigned sprite system.
Since this breaks backwards compatibility, the new component is called 'Sprite2' and the old component is considered deprecated.

What we implemented so far is that sprites now uses the tile set files, similar to how tile grids use them.
The animations are defined in the tile set, which simplifies trigging them in the scripts.

((((
image::images/blog/20111222_sprite_anim_collision_editing/sprite_editing.png["Sprite Editing", align="center"]
((((

Let us show by an example. To trigger an animation the old way, you would have a script that did:

[source,lua]
----
msg.post("#my_sprite", "play_animation", {start_tile = 1, end_tile = 3, playback = 1})
----

With the new system, you add the animation to the tile set (*Tile Set > Add Animation*). Then, in a script, you do:

[source,lua]
----
msg.post("#my_new_sprite", "play_animation2", {id = hash("my_animation")})
----

This also means that there is only one place to update if you want to change the layout of your tile set.

The animations added to the tile set can also be previewed in-place in the editor.

((((
image::images/blog/20111222_sprite_anim_collision_editing/animation_editing.png["Animation Editing", align="center"]
((((

Simply select an animation and then *Tile Set > Play/Stop Animation*.
This makes it much more easy to make sure you have specified the animation correctly.
Here is a clip showing how it looks:

link:/site/images/blog/20111222_sprite_anim_collision_editing/sprite_anim_preview.mp4[Animation Clip]

When an animation in the new system has completed, the script which started it will receive an 'animation_done2' message.
We have updated the link:/#documentation:[documentation] to describe the new messages.

Speaking of tile sets, we have also fixed an issue of the collision group colors changing anytime the list was reordered.
Now they stay the same color, and also yields an error if you use more groups than the maximum allowed (16).

We have yet to implement the cues which will let you post messages automatically at certain frames during the animations.
This is a great way to trigger effects for example.
We also post-poned the flip-tile feature, which will let you reuse tiles for different animations.
An example of this would be to have walk animations going both left and right based on the same set of tiles, but flipped for one of the directions.

Backwards Compatibility
~~~~~~~~~~~~~~~~~~~~~~~

We are very concerned about always staying backwards compatible, but there will always be improvements that force us to move forward.
The new sprite system is an example of this.
To not break any of your content, we are now testing a strategy of having three different stages to counter for this.
This is briefly what each stage means:

. The 'Sprite' type becomes deprecated, any such components will be flagged with warnings when opened.
  You should convert any such components to the new 'Sprite2' component.
. Support for the old 'Sprite' type is removed.
  'Sprite' and 'Sprite2' both means the new type now.
  Convert all 'Sprite2' components to 'Sprite'.
. Support for 'Sprite2' is removed.

It might seem complicated, but we hope that the guidance in the editor will be enough to lead you through it.
There will be weeks of time between each stage, so you should have plenty of time to make the adjustments.
It is also an experiment and we love to hear about any other ideas on how to do this as painless as possible.
Our main goal is to never break content with a new release.

Collision Objects
~~~~~~~~~~~~~~~~~

We have implemented many longed-for features regarding collision objects too.
It's been a nuicance to create separate convex shape files to specify the geometry for collision objects.
Now you can add them in-place in the editor, both for collision objects embedded in a game object and collision objects in separate files.
You can also add multiple shapes to the same collision object, to construct more complex collision shapes.

It was also very hard to specify their geometry in the property grids we used before in the editor.
Now we have added more manipulators (similar to Maya) to adjust the shapes in the scene view.
The manipulators are activated through the new *Scene* menu.

An example of this would be to select a sphere and then *Scene > Scale Tool*, which lets you adjust the radius of the sphere visually.
The tool works similar for other shapes, depending on their constitution.
The shapes can also be moved and rotated in relation to the collision object they belong to, through the *Move Tool* and *Rotate Tool* respectively.
The translation and rotation can still be specified in the property view too.
The rotation is now specified by euler-coordinates (degrees around each axis), which are much easier to use than quaternions.

((((
image::images/blog/20111222_sprite_anim_collision_editing/shape_editing.png["Shape Editing", align="center"]
((((

Scene Editor
~~~~~~~~~~~~

The manipulators described above are examples of how we have further improved the Scene Editor.
When needed, we will implement the same kind of functionality for other components.

Other new features is that the camera now works similar to the Collection Editor, i.e. Maya-controls.
It supports tracking (going sideways) and dollying (zooming).

The framing functionality from the Collection Editor has also been re-implemented in the Scene Editor.
It can be accessed through *Scene > Frame Objects*.
It frames whatever is selected, or all objects if nothing is.

Update Editor
~~~~~~~~~~~~~

Go to *Help > Check For Update* to update the editor to the latest version.

((((
image::images/blog/20111222_sprite_anim_collision_editing/update_editor.png["Update Editor", align="center"]
((((

Google Groups
~~~~~~~~~~~~~

As you all hopefully have noticed, we have started a Google Group for Defold users.
We hope that it will soon spur with activity and be sufficient as our community forum.
If you need support, this is currently the best place to turn to.
Issues with the service or concrete change requests should still be directed to the cases-mail.
We will add a post on how to use it in the group, to avoid spammers.

We are also proud to announce that two new projects have joined the Defold community!
So oldies, please be kind to the newbies in the group. :)

Roadmap
~~~~~~~

We are going to have a big planning day on December 27.
After that, we will post a list of the different areas we think needs improvement in the user group.
Our hope is to get a discussion going and to get feedback from you about which areas are the most important.
We really want to involve you all more in prioritizing what needs to be done when.
For now, these are the areas we have had in the roadmap for a long while:

. Documentation - User Manual, Tutorials, etc
. Website - Re-designed layout and structure
. Rendering Improvements

The Defold-team wishes you all a merry christmas!

Update - Scene Editor
---------------------
_November 21, 2011_

Scene Editor
~~~~~~~~~~~~

We have made lots of changes in the Scene Editor during the week.
First we did some major restructuring of the code, to make the foundation as stable and clean as possible.
Clean code means faster development cycles and less bugs, so we really hope this will get us up to speed when implementing new editing functionality, without sacrificing stability.

We also did more work on the presentation, to give you an idea of how we want it to be like.

The background in the Scene Editor is now a nice gradient (like the collection editor), which can be configured through File > Preferences.
Select Defold > Scene Editor in the dialog.

The outline view now displays icons for the items, along with markers if there are any issues in the data.
If you hover with the mouse over such a marker, a tooltip is displayed.

((((
image::images/blog/20111121/sceneed_markers.png["Outline markers", width=880, align="center"]
((((

You can also open referenced files in the outline view by double-clicking the items (or hitting enter while they are selected).

The property view has been extended with the ability for us to disable irrelevant fields.
An example of this is when you have a collision object with its type set to anything else than dynamic.
Its mass is then irrelevant, since it should always be zero.
This is now taken care of by the editor and pipeline.

((((
image::images/blog/20111121/sceneed_icons.png["Outline markers", width=880, align="center"]
((((

We have also made the values in drop-down lists more readable.

We have updated the icons for some of the file types and items.
We hope they not only look better, but also more clearly reflects their type now.

Lua Editor
~~~~~~~~~~

The Lua Editor was not very good at handling comments before.
This has now been fixed and it colors both multi-line comments and single line comments correctly now.

[source,lua]
----
local my_var = 1 -- this is a single line comment

--[[
This is a multi-line comment
--]]
----

Please let us know about any other fixes or suggestions through the cases-mail.

In the coming week we will work on sprite editing and collision object editing in parallel.

Roadmap
~~~~~~~

. Scene Editor - Sprite and collision object editing
. Documentation - User Manual, Tutorials, etc
. Rendering Improvements
. Website - Re-designed layout and structure

Update - Scene Editor
---------------------
_November 17, 2011_

Scene Editor
~~~~~~~~~~~~

Progress on the new Scene Editor has been a bit slower than we hoped, but now it has finally been released for you to try out!
Update the editor to 1.0.44 and it should be activated whenever you open a game object.
There is still more work needed to be done regarding presentation and visualization, but at least it now supports the functionality of the old version.

It has become apparent that a lot of tasks in the editor involves going back and forth between the outline view and the properties view.
Because of this, we have moved the outline view to be right above the properties way.
It also felt natural to have the views related to file resources to the left (Project Explorer and Changed Files) and content related views to the right.
Please comment if you have any other ideas on how the views should be restructured.

((((
image::images/blog/scene_ed_go.png["Scene Editor", width=880, align="center"]
((((

Sprites
~~~~~~~

As soon as the game object editing and the basic functionality of the Scene Editor has been completed, we will implement the new sprite editing in it.
We made several passes on the design and it feels promising now.
A feature worth mentioning are predefined animations and cues.
When a cue is hit during an animation, the sprite component will broadcast a message to the other components.
This makes it easy to trigger sounds and other effects, register hits during attack animations in action games and lots of other possibilities.

Tiles
~~~~~

We have fixed a few more tile-related issues last weeks and how now deemed that system stable.
There are probably a few more bugs lurking around, but hopefully not too many.
Don't forget to report any issues to the case-mail.

Content Pipeline
~~~~~~~~~~~~~~~~

The new content pipeline has been installed on the server.
We have been given the permission from one of the projects to use it as a test bed.
Then we can verify stability in a real production environment.
We really appreciate that, thanks a lot!

Roadmap
~~~~~~~

. Scene Editor - Limited release supporting game objects, sprites and "simple types"
. Sprite Editing - Improved
. Content Pipeline - To only be used for testing at the moment
. Documentation - User Manual, Tutorials, etc
. Website - Re-designed layout and structure

Thanks for reading and don't forget to use the case-mail!

Update - Scene Editor & Content Pipeline
----------------------------------------
_November 6, 2011_

Scene Editor
~~~~~~~~~~~~

A new editor has spawned as a result from the design work on game object editing, it is called the _Scene Editor_.
It will ultimately replace all the other editors, with the exception of text (scripts and shaders) and 2D (tile sets and guis) editors.

It has a mix of behaviours and functionality from the current editors, but all put into one.
It will support in-place items and items referenced from files, like the current game object editor does.
It will also support the structural and visual overview that the current collection editor has.
This makes it suitable for editing any item present in the scene graph, such as collections, game objects, sprites, cameras, etc.

It was tricky to design because of its complexity, so we made a prototype to get a better understanding of the problem.
The prototype has been completed and we really feel we are onto something interesting now.
Below is a screen-shot of the prototype, please note that presentation was not a priority. :-)

((((
image::images/blog/scene_ed_prot.png["Scene editor prototype", width=880, align="center"]
((((

There are a bit more design-knots to untie, but we hope to be able to release a working version in a week, hopefully replacing the current game object editor altogether.
That release will still be limited feature-wise relative the ultimate goal of course, but would cover the features currently available.

Content Pipeline
~~~~~~~~~~~~~~~~

The content pipeline now satisfies all the requirements we currently have on building content.
The next step is to install it on the server and let it run there silently for an extended period of time.
It is crucial that a content pipeline have high stability, since bugs in them can appear as changes not making it to the running game or even broken builds.
Such bugs can be hard to track down too.

Once we feel it's stable enough, using real content as test data, we will continue working on the local build feature.
There are a few more things needed to actually make it work, regarding security and so on.

Roadmap
~~~~~~~

. Tile Usability - Any known and new issues, workflow improvements, etc
. Scene Editor - Limited release supporting game objects, sprites and "simple types"
. Content Pipeline - To only be used for testing at the moment
. Documentation - User Manual, Tutorials, etc
. Website - Re-designed layout and structure

Thanks for reading and hope you will enjoy the upcoming features!

Update - Sprite Design, Tile Fixes & Content Pipeline
-----------------------------------------------------
_October 31, 2011_

Sprites
~~~~~~~

We have completed the first iteration of how sprites should be integrated with the tile sets.
Here is a list of the features included in the first version:

* Predefined animations in the sprite component
* Play animations for previewing in the editor
* Play animations in-game from scripts
* "Animation done" notification message to scripts
* Animated collision geometry
* User-defined cues at specified frames (to trigger sounds etc)
* Color tinting from scripts

To achieve better efficiency and higher quality, we are also trying out a modified development process for new features.
It looks roughly like this:

. Initial design (Phase 1)
. Feedback
. Revise design
. _Pause_
. Design (Phase 2)
. Planning - Break down into use-cases/stories/cases
. Implement with TDD (Test Driven Development)
. Initial Deployment
. Testing
. Bug reports and feature requests
. Prioritize
. Fix bugs and implement feature requests
. Deployment of 1.0

Right now we have come to the _Pause_ stage.
The idea is to let the design settle and be able to come back to it later with a fresh mind.
In the mean-time, we will continue to work on the design for the new Game Object editor.

Tiles
~~~~~

We had some collision issues with the new tile system.
It turned out that when aligning blocks to form ground and other continuous shapes that span over several cells, objects could fall through between the cells.
This issue has been fixed.

Another related problem is that not all of such cells are properly stitched together.
This causes little "bumps" to remain in the collision geometry, sometimes causing objects that slide across the surface to get stuck.
(The images are by courtesy of Mikael Säker.)

((((
image::images/blog/platform_tutorial/character_stuck.png["Character getting stuck against the edge of new collision geometry", align="center"]
((((

We are still working on a solution for this, but we did improve the in-game physics debugging.
It is much easier to see what's going on, physics-wise, in the games now.

((((
image::images/blog/platform_tutorial/character_stuck_debug.png["Improved physics debug rendering", align="center"]
((((

To enable and control the debugging, the following options are now available in the game.project-files:

* physics.debug - 1 to enable, 0 to disable
* physics.debug_alpha - alpha value to use for all physics debug rendering, 0.0-1.0
* physics.debug_scale - how big things like normals should appear on screen

Here is a sample of a game.project-file:

[source,txt]
----
[physics]
debug = 1
debug_alpha = 0.8
debug_scale = 30
----

Content Pipeline
~~~~~~~~~~~~~~~~

A long term goal we have is to enable users to build content locally on their own machines, in addition to the Defold-servers.
The biggest advantage of this is that build times would be lower, since we wouldn't have to send data back and forth over the internet.
Another advantage is that users can work and build content off-line.
It also means that we can integrate the pipeline into the editor, which in turn means better and more unified error handling.

The work has come a long way already and we are implementing a prototype at the moment to run tests on.

Roadmap
~~~~~~~

Currently, our roadmap looks like this:

. Tile Usability - Any known and new issues, workflow improvements, etc
. Game Object Editor Design - Better preview and editing support for components inside the game object editor
. Sprite Planning & Implementation
. Content Pipeline Prototype
. Documentation - User Manual, Tutorials, etc
. Website - Re-designed layout and structure

That's it at this time!
Hope you enjoyed reading and, as usual, let us know if you have any feedback or suggestions.

Update - Tiles & Properties
---------------------------
_October 23, 2011_

Welcome to the first update-post from Defold!
This is a way for us to tell you a bit about what has happened lately and what lies ahead.

Tiles
~~~~~

We are very excited to have completed the first iteration of our tile-system.
Tiles are typically used whenever you want to place a lot of images in a grid based fashion,
for example in platformers, RTS- and TD-games.

To start putting tiles into your game, you first need to create a 'tile set' (.tileset).
In the tile set, you specify the image containing the tiles, as well as metrics on how you have ordered your tiles inside the image.
If you also specify an image for collision, collision hulls will be automatically generated for the tiles.

((((
image::images/blog/tile_1.0/tileset_editor.png["Tile set editor", width=880, align="center"]
((((

Please see the new menu *Tile Set* in the top menu bar for more of the features available when you are working with tile sets.

The next step is to create a 'tile grid'.
The tile grid is a new component that takes care of rendering and physics for the tiles in-game.
To be able to do this, the system needs to know which tile set you want to fetch the tiles from.
To start painting tiles into your grid, select a layer in the outline view.
If you look at the top menu bar, there is now a new menu called *Tile Grid* available.
Select *Tile Grid > Show Palette* to bring up the tile set you specified.

((((
image::images/blog/tile_1.0/tilegrid_edior_brush.png["Tile set brush selection", width=880, align="center"]
((((

Click on a tile you want to use, which will turn the cursor into a brush with that tile selected.
Paint your tiles, rinse and repeat.
To erase painted tiles, open the palette again.
Click on the selected tile, which will turn the cursor into an eraser.

((((
image::images/blog/tile_1.0/tilegrid_editor.png["Tile set editor", width=880, align="center"]
((((

To finally bring your newly painted tiles into the game, add the tile grid as a component to a game object present in the game.
If you also want to have collision on the tiles, add a collision object component to the same game object and specify
the tile grid as its collision shape.

((((
image::images/blog/tile_1.0/collection_editor.png["Collection editor", width=880, align="center"]
((((

Another cool thing is that you can change the tiles in-game from your logic scripts.
Check out the new 'set_tile' message in the documentation ('GameSys').

Properties
~~~~~~~~~~

We have also completely revamped the property system used by the editor.
The most noticable thing is that the layout has changed from grid-based to form-based.
We have also started to employ a new usage-philosophy, which is that all user input should be accepted.
The input is still validated, but any errors or other message is now displayed in a non-intrusive way next to the related input fields.
No more annoying popup dialogs! :-)

((((
image::images/blog/tile_1.0/property_messages.png["Property editor", width=880, align="center"]
((((

All of this new editor functionality is of course up to Defold-standards, which means complete support for:

* Undo/redo
* Reload
* Refactoring

What we haven't fixed yet however (among others) are:

* More convenient tools for painting/editing tiles (please contribute with your own suggestions!)
* Reload of tile grids in-game
* Sprites are still created/animated as usual

Roadmap
~~~~~~~

This is our roadmap, as it looks at this very moment, ordered from sooner to later.

. Sprite re-design - How to incorporate sprites better with the new tile system
. Tile Usability - Any known and new issues, workflow improvements, etc
. Game Object editor - Better preview and editing support for components inside the game object editor
. Documentation - User Manual, Tutorials, etc
. Website - Re-designed layout and structure

We really hope you enjoyed reading this.
As always, we would love to hear any feedback, change requests, complaints or other issues you experience while using Defold.
Direct them to the usual cases-mail.
Now go ahead and make a more original game than we did! ;-)

((((
image::images/blog/tile_1.0/the_game.png["Tiles in-game", width=880, align="center"]
((((

[source,lua]
----
-- clean termination
function final(self)
    print("The Defold-Team thanks you for your support!")
end
----
