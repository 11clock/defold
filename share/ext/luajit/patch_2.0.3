Binary files luajit-2.0/.git/index and luajit-2.0b/.git/index differ
diff -u -r luajit-2.0/src/lj_alloc.c luajit-2.0b/src/lj_alloc.c
--- luajit-2.0/src/lj_alloc.c	2014-10-13 18:05:47.000000000 +0200
+++ luajit-2.0b/src/lj_alloc.c	2014-10-13 18:06:00.000000000 +0200
@@ -35,7 +35,7 @@
 #ifndef LUAJIT_USE_SYSMALLOC
 
 #define MAX_SIZE_T		(~(size_t)0)
-#define MALLOC_ALIGNMENT	((size_t)8U)
+#define MALLOC_ALIGNMENT	((size_t)16U)
 
 #define DEFAULT_GRANULARITY	((size_t)128U * (size_t)1024U)
 #define DEFAULT_TRIM_THRESHOLD	((size_t)2U * (size_t)1024U * (size_t)1024U)
diff -u -r luajit-2.0/src/lj_obj.h luajit-2.0b/src/lj_obj.h
--- luajit-2.0/src/lj_obj.h	2014-10-13 18:05:34.000000000 +0200
+++ luajit-2.0b/src/lj_obj.h	2014-10-13 18:14:26.000000000 +0200
@@ -245,7 +245,8 @@
   GCRef env;		/* Should be at same offset in GCfunc. */
   MSize len;		/* Size of payload. */
   GCRef metatable;	/* Must be at same offset in GCtab. */
-  uint32_t align1;	/* To force 8 byte alignment of the payload. */
+  uint32_t align0;	/* To force 16 byte alignment of the payload. */
+  uint64_t align1;	/* ^ */ 
 } GCudata;
 
 /* Userdata types. */
diff -u -r luajit-2.0/src/msvcbuild.bat luajit-2.0b/src/msvcbuild.bat
--- luajit-2.0/src/msvcbuild.bat	2014-09-30 11:55:42.000000000 +0200
+++ luajit-2.0b/src/msvcbuild.bat	2014-10-13 17:34:43.000000000 +0200
@@ -11,89 +11,89 @@
 @rem
 @rem Then cd to this directory and run this script.
 
-@if not defined INCLUDE goto :FAIL
+@if not defined INCLUDE goto FAIL
 
 @setlocal
-@set LJCOMPILE=cl /nologo /c /O2 /W3 /D_CRT_SECURE_NO_DEPRECATE
+@set LJCOMPILE=cl /nologo /c /O2 /W3 /D_CRT_SECURE_NO_DEPRECATE /DLUAJIT_DISABLE_JIT
 @set LJLINK=link /nologo
 @set LJMT=mt /nologo
 @set LJLIB=lib /nologo /nodefaultlib
 @set DASMDIR=..\dynasm
 @set DASM=%DASMDIR%\dynasm.lua
 @set LJDLLNAME=lua51.dll
-@set LJLIBNAME=lua51.lib
+@set LJLIBNAME=libluajit-5.1.lib
 @set ALL_LIB=lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c
 
 %LJCOMPILE% host\minilua.c
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 %LJLINK% /out:minilua.exe minilua.obj
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 if exist minilua.exe.manifest^
   %LJMT% -manifest minilua.exe.manifest -outputresource:minilua.exe
 
-@set DASMFLAGS=-D WIN -D JIT -D FFI -D P64
+@set DASMFLAGS=-D WIN -D FFI -D P64
 @set LJARCH=x64
 @minilua
-@if errorlevel 8 goto :X64
-@set DASMFLAGS=-D WIN -D JIT -D FFI
+@if errorlevel 8 goto X64
+@set DASMFLAGS=-D WIN -D FFI
 @set LJARCH=x86
 :X64
 minilua %DASM% -LN %DASMFLAGS% -o host\buildvm_arch.h vm_x86.dasc
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 
 %LJCOMPILE% /I "." /I %DASMDIR% host\buildvm*.c
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 %LJLINK% /out:buildvm.exe buildvm*.obj
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 if exist buildvm.exe.manifest^
   %LJMT% -manifest buildvm.exe.manifest -outputresource:buildvm.exe
 
 buildvm -m peobj -o lj_vm.obj
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 buildvm -m bcdef -o lj_bcdef.h %ALL_LIB%
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 buildvm -m ffdef -o lj_ffdef.h %ALL_LIB%
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 buildvm -m libdef -o lj_libdef.h %ALL_LIB%
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 buildvm -m recdef -o lj_recdef.h %ALL_LIB%
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 buildvm -m vmdef -o jit\vmdef.lua %ALL_LIB%
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 buildvm -m folddef -o lj_folddef.h lj_opt_fold.c
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 
-@if "%1" neq "debug" goto :NODEBUG
+@if "%1" neq "debug" goto NODEBUG
 @shift
 @set LJCOMPILE=%LJCOMPILE% /Zi
 @set LJLINK=%LJLINK% /debug
 :NODEBUG
-@if "%1"=="amalg" goto :AMALGDLL
-@if "%1"=="static" goto :STATIC
-%LJCOMPILE% /MD /DLUA_BUILD_AS_DLL lj_*.c lib_*.c
-@if errorlevel 1 goto :BAD
+@if "%1"=="amalg" goto AMALGDLL
+@if "%1"=="static" goto STATIC
+%LJCOMPILE% /MT lj_*.c lib_*.c
+@if errorlevel 1 goto BAD
 %LJLINK% /DLL /out:%LJDLLNAME% lj_*.obj lib_*.obj
-@if errorlevel 1 goto :BAD
-@goto :MTDLL
+@if errorlevel 1 goto BAD
+@goto MTDLL
 :STATIC
 %LJCOMPILE% lj_*.c lib_*.c
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 %LJLIB% /OUT:%LJLIBNAME% lj_*.obj lib_*.obj
-@if errorlevel 1 goto :BAD
-@goto :MTDLL
+@if errorlevel 1 goto BAD
+@goto MTDLL
 :AMALGDLL
-%LJCOMPILE% /MD /DLUA_BUILD_AS_DLL ljamalg.c
-@if errorlevel 1 goto :BAD
+%LJCOMPILE% /MT ljamalg.c
+@if errorlevel 1 goto BAD
 %LJLINK% /DLL /out:%LJDLLNAME% ljamalg.obj lj_vm.obj
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 :MTDLL
 if exist %LJDLLNAME%.manifest^
   %LJMT% -manifest %LJDLLNAME%.manifest -outputresource:%LJDLLNAME%;2
 
 %LJCOMPILE% luajit.c
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 %LJLINK% /out:luajit.exe luajit.obj %LJLIBNAME%
-@if errorlevel 1 goto :BAD
+@if errorlevel 1 goto BAD
 if exist luajit.exe.manifest^
   %LJMT% -manifest luajit.exe.manifest -outputresource:luajit.exe
 
@@ -101,13 +101,13 @@
 @echo.
 @echo === Successfully built LuaJIT for Windows/%LJARCH% ===
 
-@goto :END
+@goto END
 :BAD
 @echo.
 @echo *******************************************************
 @echo *** Build FAILED -- Please check the error messages ***
 @echo *******************************************************
-@goto :END
+@goto END
 :FAIL
 @echo You must open a "Visual Studio .NET Command Prompt" to run this script
 :END
