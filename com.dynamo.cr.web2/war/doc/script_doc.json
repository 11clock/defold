{"elements": [{"parameters": [{"doc": "quaternion to create matrix from", "name": "q"}], "type": "FUNCTION", "name": "matrix4_from_quat", "return_": "matrix represented by quaternion", "description": "Create a matrix4 from quaternion"}, {"parameters": [{"doc": "receiver to send message to. Could be nil, a string or an URL object", "name": "receiver"}, {"doc": "message id for the message. Either a string or a pre-hashed value", "name": "message_id"}, {"doc": "lua table message to send. Optional argument", "name": "[message]"}], "type": "FUNCTION", "name": "msg.post", "return_": "", "description": "Post message"}, {"parameters": [{"doc": "uri string to create uri from", "name": "[uristring]"}, {"doc": "socket name from the URI", "name": "[socket]"}, {"doc": "path of the URI", "name": "[path]"}, {"doc": "fragment of the URI", "name": "[fragment]"}], "type": "FUNCTION", "name": "msg.url", "return_": "a new URI", "description": "Create a new URL. The function has two general forms. Either you pass a single argument containing the URI to be parsed as text or you pass individual parts of the URI. The two forms are illustrated in the following examples: <br><br> msg.url(\"socket:/path#fragment) <br> msg.url(\"socket\", \"/path\", \"fragment\") <br> In the second form you could leave out arguments, eg: <br><br> msg.url(\"socket\", \"/path\")"}, {"parameters": [{"doc": "source filename", "name": "filename"}], "type": "FUNCTION", "name": "sys.load", "return_": "loaded table", "description": "Load lua table to disk"}, {"parameters": [{"doc": "destination filename", "name": "filename"}, {"doc": "table to write to disk", "name": "table"}], "type": "FUNCTION", "name": "sys.save", "return_": "", "description": "Save lua table to disk"}, {"parameters": [{"doc": "quaternion to get conjugate for", "name": "q"}], "type": "FUNCTION", "name": "vmath.conj", "return_": "conjugate", "description": "Get conjugate"}, {"parameters": [{"doc": "first vector3", "name": "v1"}, {"doc": "second vector3", "name": "v2"}], "type": "FUNCTION", "name": "vmath.cross", "return_": "new vector3 representing the cross product", "description": "Calculate cross product of two vectors"}, {"parameters": [{"doc": "first vector", "name": "v1"}, {"doc": "second vector", "name": "v1"}], "type": "FUNCTION", "name": "vmath.dot", "return_": "dot product", "description": "Calculate dot product of two vector3"}, {"parameters": [{"doc": "vector3 to get length for", "name": "v"}], "type": "FUNCTION", "name": "vmath.length", "return_": "vector length", "description": "Get vector length."}, {"parameters": [{"doc": "vector3 to get squared length for", "name": "v"}], "type": "FUNCTION", "name": "vmath.length_sqr", "return_": "squared vector length", "description": "Get squared vector length."}, {"parameters": [{"doc": "interpolation parameter", "name": "t"}, {"doc": "first vector3 to lerp", "name": "v1"}, {"doc": "second vector3 to lerp", "name": "v2"}], "type": "FUNCTION", "name": "vmath.lerp", "return_": "", "description": "Lerp two vector3"}, {"parameters": [{"doc": "interpolation parameter", "name": "t"}, {"doc": "first quaternion to lerp", "name": "q1"}, {"doc": "second quaternion to lerp", "name": "q2"}], "type": "FUNCTION", "name": "vmath.lerp", "return_": "", "description": "Lerp two quaternions"}, {"parameters": [{"doc": "interpolation parameter", "name": "t"}, {"doc": "first vector3 to slerp", "name": "v1"}, {"doc": "second vector3 to slerp", "name": "v2"}], "type": "FUNCTION", "name": "vmath.lerp", "return_": "", "description": "Slerp two vector3"}, {"parameters": [{"doc": "interpolation parameter", "name": "t"}, {"doc": "first quaternion to slerp", "name": "q1"}, {"doc": "second quaternion to slerp", "name": "q2"}], "type": "FUNCTION", "name": "vmath.lerp", "return_": "", "description": "Slerp two quaternions"}, {"parameters": [], "type": "FUNCTION", "name": "vmath.matrix4", "return_": "new identity matrix", "description": "Create a new identity matrix4."}, {"parameters": [{"doc": "existing matrix", "name": "[m]"}], "type": "FUNCTION", "name": "vmath.matrix4", "return_": "new matrix", "description": "Create a new matrix4 from existing."}, {"parameters": [{"doc": "axis", "name": "v"}, {"doc": "angle", "name": "angle"}], "type": "FUNCTION", "name": "vmath.matrix4_axis_angle", "return_": "matrix represented by axis and angle", "description": "Create a matrix4 from axis and angle"}, {"parameters": [{"doc": "coordinate for left clipping plane", "name": "left"}, {"doc": "coordinate for right clipping plane", "name": "right"}, {"doc": "coordinate for bottom clipping plane", "name": "bottom"}, {"doc": "coordinate for top clipping plane", "name": "top"}, {"doc": "coordinate for near clipping plane", "name": "near"}, {"doc": "coordinate for far clipping plane", "name": "far"}], "type": "FUNCTION", "name": "vmath.matrix4_frustum", "return_": "matrix4 representing the frustum", "description": "Create a frustum matrix"}, {"parameters": [{"doc": "eye position", "name": "eye"}, {"doc": "look-at position", "name": "lookat"}, {"doc": "up vector", "name": "up"}], "type": "FUNCTION", "name": "vmath.matrix4_lookat", "return_": "lookat matrix", "description": "Create a lookat matrix"}, {"parameters": [{"doc": "coordinate for left clipping plane", "name": "left"}, {"doc": "coordinate for right clipping plane", "name": "right"}, {"doc": "coordinate for bottom clipping plane", "name": "bottom"}, {"doc": "coordinate for top clipping plane", "name": "top"}, {"doc": "coordinate for near clipping plane", "name": "near"}, {"doc": "coordinate for far clipping plane", "name": "far"}], "type": "FUNCTION", "name": "vmath.matrix4_orthographic", "return_": "orthographic projection matrix", "description": "Create an orthographic projection matrix"}, {"parameters": [{"doc": "field of view in radians", "name": "fov"}, {"doc": "aspect ratio", "name": "aspect"}, {"doc": "coordinate for near clipping plane", "name": "near"}, {"doc": "coordinate for far clipping plane", "name": "far"}], "type": "FUNCTION", "name": "vmath.matrix4_perspective", "return_": "perspective projection matrix", "description": "Create a perspective projection matrix"}, {"parameters": [{"doc": "angle around x-axis", "name": "angle"}], "type": "FUNCTION", "name": "vmath.matrix4_rotation_x", "return_": "matrix from rotation around x-axis", "description": "Create a matrix4 from rotation around x-axis"}, {"parameters": [{"doc": "angle around y-axis", "name": "angle"}], "type": "FUNCTION", "name": "vmath.matrix4_rotation_y", "return_": "matrix from rotation around y-axis", "description": "Create a matrix4 from rotation around y-axis"}, {"parameters": [{"doc": "angle around z-axis", "name": "angle"}], "type": "FUNCTION", "name": "vmath.matrix4_rotation_z", "return_": "matrix from rotation around z-axis", "description": "Create a matrix4 from rotation around z-axis"}, {"parameters": [{"doc": "vector to normalize", "name": "v"}], "type": "FUNCTION", "name": "vmath.normalize", "return_": "new normalized vector", "description": "Normalize a vector3"}, {"parameters": [{"doc": "first vector to project on", "name": "v1"}, {"doc": "second vector to project", "name": "v2"}], "type": "FUNCTION", "name": "vmath.project", "return_": "projected distance", "description": "Project two vector3"}, {"parameters": [{"doc": "axis", "name": "v"}, {"doc": "angle", "name": "angle"}], "type": "FUNCTION", "name": "vmath.quat_axis_angle", "return_": "quaternion represented by axis and angle", "description": "Create a quaternion from axis and angle"}, {"parameters": [{"doc": "x base vector", "name": "x"}, {"doc": "y base vector", "name": "y"}, {"doc": "z base vector", "name": "z"}], "type": "FUNCTION", "name": "vmath.quat_basis", "return_": "quaternion from base vectors", "description": "Create a quaternion from three base vectors"}, {"parameters": [{"doc": "first vector", "name": "v1"}, {"doc": "second vector", "name": "v2"}], "type": "FUNCTION", "name": "vmath.quat_from_to", "return_": "quaternion representing the rotation from first to second vector", "description": "Create a quaternion from two vectors."}, {"parameters": [{"doc": "angle around x-axis", "name": "angle"}], "type": "FUNCTION", "name": "vmath.quat_rotation_x", "return_": "quaternion from rotation around x-axis", "description": "Create a quaternion from rotation around x-axis"}, {"parameters": [{"doc": "angle around y-axis", "name": "angle"}], "type": "FUNCTION", "name": "vmath.quat_rotation_y", "return_": "quaternion from rotation around y-axis", "description": "Create a quaternion from rotation around y-axis"}, {"parameters": [{"doc": "angle around z-axis", "name": "angle"}], "type": "FUNCTION", "name": "vmath.quat_rotation_z", "return_": "quaternion from rotation around z-axis", "description": "Create a quaternion from rotation around z-axis"}, {"parameters": [], "type": "FUNCTION", "name": "vmath.quaternion", "return_": "new identity quaternion", "description": "Create a new identity quaternion."}, {"parameters": [{"doc": "existing quaternion", "name": "q"}], "type": "FUNCTION", "name": "vmath.quaternion", "return_": "new quaternion", "description": "Create a new quaternion from existing."}, {"parameters": [{"doc": "x coordinate", "name": "x"}, {"doc": "y coordinate", "name": "y"}, {"doc": "z coordinate", "name": "z"}, {"doc": "w coordinate", "name": "w"}], "type": "FUNCTION", "name": "vmath.quaternion", "return_": "new quaternion", "description": "Create a new quaternion from four coordinates."}, {"parameters": [{"doc": "quaternion", "name": "q"}, {"doc": "vector3 to rotate", "name": "v"}], "type": "FUNCTION", "name": "vmath.rotate", "return_": "rotated vector", "description": "Rotate vector3 using a quaternion"}, {"parameters": [], "type": "FUNCTION", "name": "vmath.vector3", "return_": "new zero vector", "description": "Create a new zero vector3"}, {"parameters": [{"doc": "existing vector", "name": "v"}], "type": "FUNCTION", "name": "vmath.vector3", "return_": "new vector", "description": "Create a new vector3 from existing"}, {"parameters": [{"doc": "x coordinate", "name": "x"}, {"doc": "y coordinate", "name": "y"}, {"doc": "z coordinate", "name": "z"}], "type": "FUNCTION", "name": "vmath.vector3", "return_": "new vector", "description": "Create a new vector3 from three coordinates"}, {"parameters": [], "type": "FUNCTION", "name": "vmath.vector4", "return_": "new zero vector", "description": "Create a new zero vector4."}, {"parameters": [{"doc": "existing vector", "name": "v"}], "type": "FUNCTION", "name": "vmath.vector4", "return_": "new vector", "description": "Create a new vector4 from existing."}, {"parameters": [{"doc": "x coordinate", "name": "x"}, {"doc": "y coordinate", "name": "y"}, {"doc": "z coordinate", "name": "z"}, {"doc": "w coordinate", "name": "w"}], "type": "FUNCTION", "name": "vmath.vector4", "return_": "new vector", "description": "Create a new vector4 from three coordinates."}]}