package dmGameSystemDDF;

import "ddf/ddf_extensions.proto";
import "ddf/ddf_math.proto";

option java_package = "com.dynamo.gamesystem.proto";
option java_outer_classname = "GameSystem";

message SpawnPointDesc
{
    required string prototype = 1 [(resource)=true];
}

/*#
 * Spawn object message
 * @message
 * @name SpawnObject
 * @param position initial position (Point3) for object
 * @param rotation initial rotation quaternion for object.
 */
message SpawnObject
{
    required dmMath.Point3  position = 1;
    required dmMath.Quat    rotation = 2;
}

message CollectionProxyDesc
{
    required string collection = 1 [(resource)=true];
}

enum TimeStepMode
{
    TIME_STEP_MODE_CONTINUOUS   = 0;
    TIME_STEP_MODE_DISCRETE     = 1;
}

/*#
 * Set collection time-step message
 * @message
 * @name SetTimeStep
 * @param factor time-step scaling factor
 * @param mode time-step mode. 0 for continuous, 1 for discrete.
 */
message SetTimeStep
{
    required float          factor  = 1;
    required TimeStepMode   mode    = 2;
}

enum LightType
{
    POINT   = 0;
    SPOT    = 1;
}

message LightDesc
{
    required string         id              = 1;
    required LightType      type            = 2;
    required float          intensity       = 3;
    required dmMath.Vector3 color           = 4;
    required float          range           = 5;
    required float          decay           = 6;
    // Only applicable for spot-lights
    optional float          cone_angle      = 7;
    optional float          penumbra_angle  = 8;
    optional float          drop_off        = 9;
}

message SetLight
{
    required dmMath.Point3  position    = 1;
    required dmMath.Quat    rotation    = 2;
    required LightDesc      light       = 3;
}

message SetViewProjection
{
    required uint64         id          = 1;
    required dmMath.Matrix4 view        = 2;
    required dmMath.Matrix4 projection  = 3;
}

/*#
 * PlaySound message
 * @message
 * @name PlaySound
 * @param [delay] delay sound by numbers of seconds. Default is 0.
 */
message PlaySound
{
    optional float delay = 1 [default=0.0];
}
