#ifndef __GRAPHICS_DEVICE_OPENGL__
#define __GRAPHICS_DEVICE_OPENGL__

#ifdef __linux__
#include <GL/gl.h>
#include <GL/glu.h>
#include <GL/glut.h>

#elif defined (__MACH__)
#include <OpenGL/gl.h>
#include <OpenGL/glu.h>
#include <GLUT/glut.h>

#elif defined (_WIN32)
#include <windows.h>
#include <GL/gl.h>
#include <GL/glu.h>
#include <win32/glut.h>

#else
#error "Platform not supported."
#endif

typedef void* GFXHContext;
typedef void* GFXHDevice;


struct GFXHDevice_t
{

};


struct GFXHContext_t
{

};



// Primitive types
#define GD_PRIMTYPE_POINTLIST           (GL_POINTS)
#define GD_PRIMTYPE_LINES               (GL_LINES)
#define GD_PRIMTYPE_LINE_LOOP           (GL_LINE_LOOP)
#define GD_PRIMTYPE_LINE_STRIP          (-1ul)
#define GD_PRIMTYPE_TRIANGLES           (GL_TRIANGLES)
#define GD_PRIMTYPE_TRIANGLE_STRIP      (GL_TRIANGLE_STRIP)
#define GD_PRIMTYPE_TRIANGLE_FAN        (GL_TRIANGLE_FAN)


// Clear flags
#define GD_CLEAR_RENDERBUFFER_R         (GL_COLOR_BUFFER_BIT)
#define GD_CLEAR_RENDERBUFFER_G         (GL_COLOR_BUFFER_BIT)
#define GD_CLEAR_RENDERBUFFER_B         (GL_COLOR_BUFFER_BIT)
#define GD_CLEAR_RENDERBUFFER_A         (GL_COLOR_BUFFER_BIT)
#define GD_CLEAR_RENDERBUFFER_ALL       (GL_COLOR_BUFFER_BIT)
#define GD_CLEAR_DEPTHBUFFER            (GL_DEPTH_BUFFER_BIT)
#define GD_CLEAR_STENCILBUFFER          (GL_STENCIL_BUFFER_BIT)

#define GD_MATRIX_TYPE_WORLDVIEW        (GL_MODELVIEW)
#define GD_MATRIX_TYPE_PROJECTION       (GL_PROJECTION)

// Render states
#define GD_STATE_DEPTH_TEST             (GL_DEPTH_TEST)
#define GD_STATE_ALPHA_TEST             (GL_ALPHA_TEST)



#if 0

typedef void* HWindow;
typedef void* HVertexBuffer;
typedef void* HIndexBuffer;
typedef void* HConstantBuffer;
typedef void* HSurface;
typedef void* HTexture;
typedef void* HVertexProgram;
typedef void* HFragmentProgram;
typedef void* HVertexDeclaration;
typedef void* HRenderSetup;



struct HFragmentProgram_t
{

};

struct HVertexProgram_t
{
};






struct HTexture_t
{
};


struct HSurface_t
{

};

struct HRenderSetup_t
{

};


struct HIndexBuffer_t
{

};



struct HVertexDecl_t
{

};




#define GD_VERTEX_TYPE_SHORT		(CELL_GCM_VERTEX_S1)
#define GD_VERTEX_TYPE_USHORT		(-1ul)
#define GD_VERTEX_TYPE_INT			(-1ul)
#define GD_VERTEX_TYPE_UINT			(-1ul)
#define GD_VERTEX_TYPE_FLOAT		(CELL_GCM_VERTEX_F)
#define GD_VERTEX_TYPE_FLOAT16		(CELL_GCM_VERTEX_SF)
#define GD_VERTEX_TYPE_UBYTE		(CELL_GCM_VERTEX_UB)
#define GD_VERTEX_TYPE_SHORT_NN		(CELL_GCM_VERTEX_S32K)
#define GD_VERTEX_TYPE_USHORT_NN	(-1ul)
#define GD_VERTEX_TYPE_CMP			(CELL_GCM_VERTEX_CMP)
#define GD_VERTEX_TYPE_UBYTE256		(CELL_GCM_VERTEX_UB256)

// Vertex type bitmappings
#define MakeUBYTE4(x,y,z,w) ((w)+((z)<<8)+((y)<<16)+((x)<<24))

// Vertex usage types
#define GD_DECLUSAGE_POSITION		(CG_ATTR0)
#define GD_DECLUSAGE_BLENDWEIGHT	(CG_ATTR1)
#define GD_DECLUSAGE_BLENDINDICES	(CG_ATTR7)
#define GD_DECLUSAGE_NORMAL			(CG_ATTR2)
#define GD_DECLUSAGE_PSIZE			(CG_ATTR6)
#define GD_DECLUSAGE_TEXCOORD		(CG_ATTR8)
#define GD_DECLUSAGE_TANGENT		(CG_ATTR14)
#define GD_DECLUSAGE_BINORMAL		(CG_ATTR15)
#define GD_DECLUSAGE_TESSFACTOR		(CG_ATTR5)
#define GD_DECLUSAGE_POSITIONT		(-1ul)
#define GD_DECLUSAGE_COLOR			(CG_ATTR3)
#define GD_DECLUSAGE_FOG			(CG_ATTR5)
#define GD_DECLUSAGE_DEPTH			(-1ul)
#define GD_DECLUSAGE_SAMPLE			(-1ul)
#define GD_DECLUSAGE_VOID			((CG_ATTR15) + 1)


// Depthfunc usage types
#define GD_DEPTHFUNC_NEVER			(CELL_GCM_NEVER)
#define GD_DEPTHFUNC_LESS			(CELL_GCM_LESS)
#define GD_DEPTHFUNC_EQUAL			(CELL_GCM_EQUAL)
#define GD_DEPTHFUNC_LESSEQUAL		(CELL_GCM_LEQUAL)
#define GD_DEPTHFUNC_GREATER		(CELL_GCM_GREATER)
#define GD_DEPTHFUNC_NOTEQUAL		(CELL_GCM_NOTEQUAL)
#define GD_DEPTHFUNC_GREATEREQUAL	(CELL_GCM_GEQUAL)
#define	GD_DEPTHFUNC_ALWAYS			(CELL_GCM_ALWAYS)

// Blendfunc usage types
#define GD_BLENDFUNC_ZERO				(CELL_GCM_ZERO)
#define GD_BLENDFUNC_ONE				(CELL_GCM_ONE)
#define GD_BLENDFUNC_SRCCOLOR			(CELL_GCM_SRC_COLOR)
#define GD_BLENDFUNC_INVSRCCOLOR		(CELL_GCM_ONE_MINUS_SRC_COLOR)
#define GD_BLENDFUNC_SRCALPHA			(CELL_GCM_SRC_ALPHA)
#define GD_BLENDFUNC_INVSRCALPHA		(CELL_GCM_ONE_MINUS_SRC_ALPHA)
#define GD_BLENDFUNC_DESTALPHA			(CELL_GCM_DST_ALPHA)
#define	GD_BLENDFUNC_INVDESTALPHA		(CELL_GCM_ONE_MINUS_DST_ALPHA)
#define GD_BLENDFUNC_DESTCOLOR			(CELL_GCM_DST_COLOR)
#define GD_BLENDFUNC_INVDESTCOLOR		(CELL_GCM_ONE_MINUS_DST_COLOR)
#define GD_BLENDFUNC_SRCALPHASAT		(CELL_GCM_SRC_ALPHA_SATURATE)
#define GD_BLENDFUNC_BOTHSRCALPHA		(-1ul)
#define GD_BLENDFUNC_BOTHINVSRCALPHA	(-1ul)
#define GD_BLENDFUNC_BLENDFACTOR		(-1ul)
#define GD_BLENDFUNC_INVBLENDFACTOR		(-1ul)


 //Stencil functions
#define GD_STENCILFUNC_NEVER		(CELL_GCM_NEVER)
#define GD_STENCILFUNC_LESS			(CELL_GCM_LESS)
#define GD_STENCILFUNC_EQUAL		(CELL_GCM_EQUAL)
#define GD_STENCILFUNC_LESSEQUAL	(CELL_GCM_LEQUAL)
#define GD_STENCILFUNC_GREATER		(CELL_GCM_GREATER)
#define GD_STENCILFUNC_NOTEQUAL		(CELL_GCM_NOTEQUAL)
#define GD_STENCILFUNC_GREATEREQUAL	(CELL_GCM_GEQUAL)
#define GD_STENCILFUNC_ALWAYS		(CELL_GCM_ALWAYS)

#define GD_HISTENCILFUNC_NEVER			(CELL_GCM_SCULL_SFUNC_NEVER)
#define GD_HISTENCILFUNC_LESS			(CELL_GCM_SCULL_SFUNC_LESS)
#define GD_HISTENCILFUNC_EQUAL			(CELL_GCM_SCULL_SFUNC_EQUAL)
#define GD_HISTENCILFUNC_LESSEQUAL		(CELL_GCM_SCULL_SFUNC_LEQUAL)
#define GD_HISTENCILFUNC_GREATER		(CELL_GCM_SCULL_SFUNC_GREATER)
#define GD_HISTENCILFUNC_NOTEQUAL		(CELL_GCM_SCULL_SFUNC_NOTEQUAL)
#define GD_HISTENCILFUNC_GREATEREQUAL	(CELL_GCM_SCULL_SFUNC_GEQUAL)
#define GD_HISTENCILFUNC_ALWAYS			(CELL_GCM_SCULL_SFUNC_ALWAYS)

#define GD_HISTENCILFLUSHTYPE_ASYNCHRONOUS	(-1)
#define GD_HISTENCILFLUSHTYPE_SYNCHRONOUS	(-1)

 //Stencil operations
#define GD_STENCILOP_KEEP		(CELL_GCM_KEEP)
#define GD_STENCILOP_ZERO		(CELL_GCM_ZERO)
#define GD_STENCILOP_REPLACE	(CELL_GCM_REPLACE)
#define GD_STENCILOP_INCR_CLAMP	(CELL_GCM_INCR)
#define GD_STENCILOP_DECR_CLAMP	(CELL_GCM_DECR)
#define GD_STENCILOP_INCR_WRAP 	(CELL_GCM_INCR_WRAP)
#define GD_STENCILOP_DECR_WRAP 	(CELL_GCM_DECR_WRAP)
#define GD_STENCILOP_INVERT		(CELL_GCM_INVERT)


// Blend enable types
#define GD_BLEND_DISABLED				(CELL_GCM_FALSE)
#define GD_BLEND_ENABLED				(CELL_GCM_TRUE)
#define GD_BLEND_HIGHPRECISION			(CELL_GCM_TRUE)


// Front face types
#define GD_FRONTFACE_CW					(CELL_GCM_CW)
#define GD_FRONTFACE_CCW				(CELL_GCM_CCW)


// Blendeq usage types
#define GD_BLENDEQ_ADD					(CELL_GCM_FUNC_ADD)
#define GD_BLENDEQ_SUBTRACT				(CELL_GCM_FUNC_SUBTRACT)
#define GD_BLENDEQ_REVSUBTRACT			(CELL_GCM_FUNC_REVERSE_SUBTRACT)
#define GD_BLENDEQ_MIN					(CELL_GCM_MIN)
#define GD_BLENDEQ_MAX					(CELL_GCM_MAX)


// Textureaddress usage types
#define GD_TEXADDRESS_WRAP				(CELL_GCM_TEXTURE_WRAP)
#define GD_TEXADDRESS_MIRROR			(CELL_GCM_TEXTURE_MIRROR)
#define GD_TEXADDRESS_CLAMP				(CELL_GCM_TEXTURE_CLAMP_TO_EDGE)
#define GD_TEXADDRESS_BORDER			(CELL_GCM_TEXTURE_BORDER)
#define GD_TEXADDRESS_MIRRORONCE		(CELL_GCM_TEXTURE_MIRROR_ONCE_CLAMP_TO_EDGE)


// Texturefilter usage types
#define	GD_TEXFILTER_NONE				(CELL_GCM_TEXTURE_NEAREST)
#define	GD_TEXFILTER_NEAREST			(CELL_GCM_TEXTURE_NEAREST)
#define	GD_TEXFILTER_LINEAR				(CELL_GCM_TEXTURE_LINEAR)
#define	GD_TEXFILTER_LINEAR_LINEAR		(CELL_GCM_TEXTURE_LINEAR_LINEAR)
#define GD_TEXFILTER_LINEAR_NEAREST		(CELL_GCM_TEXTURE_LINEAR_NEAREST)
#define GD_TEXFILTER_NEAREST_LINEAR		(CELL_GCM_TEXTURE_NEAREST_LINEAR)
#define GD_TEXFILTER_NEAREST_NEAREST	(CELL_GCM_TEXTURE_NEAREST_NEAREST)
#define	GD_TEXFILTER_ANISOTROPIC		(-1ul)
#define GD_TEXFILTER_GAUSSIAN			(CELL_GCM_TEXTURE_CONVOLUTION_GAUSSIAN)
#define GD_TEXFILTER_QUINCUNX			(CELL_GCM_TEXTURE_CONVOLUTION_QUINCUNX)


// Texturefilter remap
#define GD_TEXREMAP_NORMAL				(CELL_GCM_TEXTURE_UNSIGNED_REMAP_NORMAL)
#define GD_TEXREMAP_BIASED				(CELL_GCM_TEXTURE_UNSIGNED_REMAP_BIASED)

// Texturefilter zfunc (inverted because PS3 interprets the values the opposite way)
#define GD_TEXZFUNC_NONE				(0)
#define GD_TEXZFUNC_NEVER				(CELL_GCM_TEXTURE_ZFUNC_NEVER)
#define GD_TEXZFUNC_LESS				(CELL_GCM_TEXTURE_ZFUNC_GREATER)
#define GD_TEXZFUNC_EQUAL				(CELL_GCM_TEXTURE_ZFUNC_EQUAL)
#define GD_TEXZFUNC_LESSEQUAL			(CELL_GCM_TEXTURE_ZFUNC_GEQUAL)
#define GD_TEXZFUNC_GREATER				(CELL_GCM_TEXTURE_ZFUNC_LESS)
#define GD_TEXZFUNC_NOTEQUAL			(CELL_GCM_TEXTURE_ZFUNC_NOTEQUAL)
#define GD_TEXZFUNC_GREATEREQUAL		(CELL_GCM_TEXTURE_ZFUNC_LEQUAL)
#define GD_TEXZFUNC_ALWAYS				(CELL_GCM_TEXTURE_ZFUNC_ALWAYS)

// Texturefilter gamma
#define GD_TEXGAMMA_R					(CELL_GCM_TEXTURE_GAMMA_R)
#define GD_TEXGAMMA_G					(CELL_GCM_TEXTURE_GAMMA_G)
#define GD_TEXGAMMA_B					(CELL_GCM_TEXTURE_GAMMA_B)
#define GD_TEXGAMMA_A					(CELL_GCM_TEXTURE_GAMMA_A)
#define GD_TEXGAMMA_NONE				(0)

// Max aniso
#define GD_MAX_ANISO_1					(CELL_GCM_TEXTURE_MAX_ANISO_1)
#define GD_MAX_ANISO_2					(CELL_GCM_TEXTURE_MAX_ANISO_2)
#define GD_MAX_ANISO_4					(CELL_GCM_TEXTURE_MAX_ANISO_4)
#define GD_MAX_ANISO_6					(CELL_GCM_TEXTURE_MAX_ANISO_6)
#define GD_MAX_ANISO_8					(CELL_GCM_TEXTURE_MAX_ANISO_8)
#define GD_MAX_ANISO_10					(CELL_GCM_TEXTURE_MAX_ANISO_10)
#define GD_MAX_ANISO_12					(CELL_GCM_TEXTURE_MAX_ANISO_12)
#define GD_MAX_ANISO_16					(CELL_GCM_TEXTURE_MAX_ANISO_16)

// Sprite rmode
#define GD_SPRITE_RMODE_ZERO			(CELL_GCM_POINT_SPRITE_RMODE_ZERO)
#define GD_SPRITE_RMODE_FROM_R			(CELL_GCM_POINT_SPRITE_RMODE_FROM_R)
#define GD_SPRITE_RMODE_FROM_S			(CELL_GCM_POINT_SPRITE_RMODE_FROM_S)

// Sprite Texcoord
#define GD_SPRITE_TEXCOORD_TEX0		(CELL_GCM_POINT_SPRITE_TEX0)
#define GD_SPRITE_TEXCOORD_TEX1		(CELL_GCM_POINT_SPRITE_TEX1)
#define GD_SPRITE_TEXCOORD_TEX2		(CELL_GCM_POINT_SPRITE_TEX2)
#define GD_SPRITE_TEXCOORD_TEX3		(CELL_GCM_POINT_SPRITE_TEX3)
#define GD_SPRITE_TEXCOORD_TEX4		(CELL_GCM_POINT_SPRITE_TEX4)
#define GD_SPRITE_TEXCOORD_TEX5		(CELL_GCM_POINT_SPRITE_TEX5)
#define GD_SPRITE_TEXCOORD_TEX6		(CELL_GCM_POINT_SPRITE_TEX6)
#define GD_SPRITE_TEXCOORD_TEX7		(CELL_GCM_POINT_SPRITE_TEX7)
#define GD_SPRITE_TEXCOORD_TEX8		(CELL_GCM_POINT_SPRITE_TEX8)
#define GD_SPRITE_TEXCOORD_TEX9		(CELL_GCM_POINT_SPRITE_TEX9)


// Buffer usage types
#define GD_USAGETYPE_IMMUTABLE		(0)
#define GD_USAGETYPE_DEFAULT		(0)
#define GD_USAGETYPE_DYNAMIC		(1)
#define GD_USAGETYPE_RENDERTARGET	(2)
// CubeTextureFace types
#define GD_CUBETEX_FACE_POSITIVE_X	(0)
#define GD_CUBETEX_FACE_NEGATIVE_X	(0)
#define GD_CUBETEX_FACE_POSITIVE_Y	(0)
#define GD_CUBETEX_FACE_NEGATIVE_Y	(0)
#define GD_CUBETEX_FACE_POSITIVE_Z	(0)
#define GD_CUBETEX_FACE_NEGATIVE_Z	(0)


// Locktypes usage types
#define GD_LOCKTYPE_READ_WRITE		(0)
#define GD_LOCKTYPE_READ_ONLY		(0)
#define GD_LOCKTYPE_WRITE_ONLY		(0)

// EShaderAllocationFlags types
#define GD_SHADERALLOCATION_NONE		(0)
#define GD_SHADERALLOCATION_PREDICATED	(0)

// resolvesurface parameter flags
#define GD_RS_RENDERTARGET0			(0x0)
#define GD_RS_RENDERTARGET1			(0x1)
#define GD_RS_RENDERTARGET2			(0x2)
#define GD_RS_RENDERTARGET3			(0x3)
#define GD_RS_DEPTHSTENCIL			(0x4)
#define GD_RS_ALLFRAGMENTS			(0x00)
#define GD_RS_FRAGMENT0				(0x10)
#define GD_RS_FRAGMENT1				(0x20)
#define GD_RS_FRAGMENT2				(0x30)
#define GD_RS_FRAGMENT3				(0x40)
#define GD_RS_FRAGMENTS01			(0x50)
#define GD_RS_FRAGMENTS23			(0x60)
#define GD_RS_FRAGMENTS0123			(0x70)
#define GD_RS_CLEARRENDERTARGET		(0x100)
#define GD_RS_CLEARDEPTHSTENCIL		(0x200)


// MRT
#define GD_RENDERTARGET_0			(CELL_GCM_SURFACE_TARGET_0)
#define GD_RENDERTARGET_01			(CELL_GCM_SURFACE_TARGET_MRT1)
#define GD_RENDERTARGET_012			(CELL_GCM_SURFACE_TARGET_MRT2)
#define GD_RENDERTARGET_0123		(CELL_GCM_SURFACE_TARGET_MRT3)


// Multisample types
#define GD_MULTISAMPLE_NONE			(CELL_GCM_SURFACE_CENTER_1)
#define GD_MULTISAMPLE_2X			(CELL_GCM_SURFACE_DIAGONAL_CENTERED_2)
#define GD_MULTISAMPLE_4X			(CELL_GCM_SURFACE_SQUARE_CENTERED_4) // or CELL_GCM_SURFACE_SQUARE_ROTATED_4?
#define GD_MULTISAMPLE_8X			(-1)


// index list types
#define GD_INDEXTYPE_16				(CELL_GCM_DRAW_INDEX_ARRAY_TYPE_16)
#define GD_INDEXTYPE_32				(CELL_GCM_DRAW_INDEX_ARRAY_TYPE_32)



// colour masks
#define GD_COLORMASK_R				(CELL_GCM_COLOR_MASK_R)
#define GD_COLORMASK_G				(CELL_GCM_COLOR_MASK_G)
#define GD_COLORMASK_B				(CELL_GCM_COLOR_MASK_B)
#define GD_COLORMASK_A				(CELL_GCM_COLOR_MASK_A)

// Fillmode mask styles
#define GD_FILLMODE_POINT			(CELL_GCM_POLYGON_MODE_POINT)
#define GD_FILLMODE_WIREFRAME		(CELL_GCM_POLYGON_MODE_LINE)
#define GD_FILLMODE_SOLID			(CELL_GCM_POLYGON_MODE_FILL)


// back face culling
#define GD_CULLFACE_BACK			(CELL_GCM_BACK)
#define GD_CULLFACE_FRONT			(CELL_GCM_FRONT)
#define GD_CULLFACE_NONE			(0)


// memory flags
#define GD_POOLTYPE_GFXMEM			(CELL_GCM_LOCATION_LOCAL)
#define GD_POOLTYPE_SYSMEM			(CELL_GCM_LOCATION_MAIN)



// Result codes
#define GD_RESULT_OK				(0)
#define GD_RESULT_FAIL				(1)
#define GD_RESULT_DEVICELOST		(2)

#define GD_LC_TILING_PREDICATE_COMPONENTS	(-1ul)
#define GD_LC_TILING_PREDICATE_WHOLE		(-1ul)
#define GD_LC_ZPASS							(-1ul)


// surface types
#define GD_SURFACEFORMAT_GetFromFile			(0)
#define GD_SURFACEFORMAT_Unknown				(0)
#define GD_SURFACEFORMAT_ARGB32					(CELL_GCM_TEXTURE_A8R8G8B8 | CELL_GCM_TEXTURE_SZ)
#define GD_SURFACEFORMAT_LIN_ARGB32				(CELL_GCM_TEXTURE_A8R8G8B8 | CELL_GCM_TEXTURE_LN)
#define GD_SURFACEFORMAT_ABGR32					(-1ul)
#define GD_SURFACEFORMAT_LIN_ABGR32				(-1ul)
#define GD_SURFACEFORMAT_RGBA32					(-1ul)
#define GD_SURFACEFORMAT_LIN_RGBA32				(-1ul)
#define GD_SURFACEFORMAT_BGRA32					(-1ul)
#define GD_SURFACEFORMAT_LIN_BGRA32				(-1ul)
#define GD_SURFACEFORMAT_RGB32					(CELL_GCM_TEXTURE_D8R8G8B8 | CELL_GCM_TEXTURE_SZ)
#define GD_SURFACEFORMAT_LIN_RGB32				(CELL_GCM_TEXTURE_D8R8G8B8 | CELL_GCM_TEXTURE_LN)
#define GD_SURFACEFORMAT_BGR32					(-1ul)
#define GD_SURFACEFORMAT_LIN_BGR32				(-1ul)
#define GD_SURFACEFORMAT_G32R32					(-1ul)
#define GD_SURFACEFORMAT_D24S8					(CELL_GCM_TEXTURE_DEPTH24_D8 | CELL_GCM_TEXTURE_SZ | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_LIN_D24S8				(CELL_GCM_TEXTURE_DEPTH24_D8 | CELL_GCM_TEXTURE_LN | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_D24X8					(CELL_GCM_TEXTURE_DEPTH24_D8 | CELL_GCM_TEXTURE_SZ | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_F24S8					(CELL_GCM_TEXTURE_DEPTH24_D8_FLOAT | CELL_GCM_TEXTURE_SZ | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_LIN_F24S8				(CELL_GCM_TEXTURE_DEPTH24_D8_FLOAT | CELL_GCM_TEXTURE_LN | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_RGB24					(-1ul)
#define GD_SURFACEFORMAT_ARGB1555				(CELL_GCM_TEXTURE_A1R5G5B5 | CELL_GCM_TEXTURE_SZ)
#define GD_SURFACEFORMAT_LIN_ARGB1555			(CELL_GCM_TEXTURE_A1R5G5B5 | CELL_GCM_TEXTURE_LN)
#define GD_SURFACEFORMAT_ARGB4444				(CELL_GCM_TEXTURE_A4R4G4B4 | CELL_GCM_TEXTURE_SZ)
#define GD_SURFACEFORMAT_LIN_ARGB4444			(CELL_GCM_TEXTURE_A4R4G4B4 | CELL_GCM_TEXTURE_LN)
#define GD_SURFACEFORMAT_RGB565					(CELL_GCM_TEXTURE_R5G6B5 | CELL_GCM_TEXTURE_SZ)
#define GD_SURFACEFORMAT_LIN_RGB565				(CELL_GCM_TEXTURE_R5G6B5 | CELL_GCM_TEXTURE_LN)
#define GD_SURFACEFORMAT_RGB16					(CELL_GCM_TEXTURE_D1R5G5B5)
#define GD_SURFACEFORMAT_G16R16F				(-1ul)
#define GD_SURFACEFORMAT_G16R16					(-1ul)
#define GD_SURFACEFORMAT_LIN_RGB16				(-1ul)
#define GD_SURFACEFORMAT_L16					(CELL_GCM_TEXTURE_X16 | CELL_GCM_TEXTURE_SZ | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_LIN_L16				(CELL_GCM_TEXTURE_X16 | CELL_GCM_TEXTURE_LN | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_D16					(CELL_GCM_TEXTURE_DEPTH16 | CELL_GCM_TEXTURE_SZ | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_LIN_D16				(CELL_GCM_TEXTURE_DEPTH16 | CELL_GCM_TEXTURE_LN | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_F16					(-1ul)
#define GD_SURFACEFORMAT_LIN_F16				(-1ul)
#define GD_SURFACEFORMAT_V8U8					(-1ul )
#define GD_SURFACEFORMAT_LIN_V8U8				(-1ul )
#define GD_SURFACEFORMAT_A8L8					(CELL_GCM_TEXTURE_G8B8 | CELL_GCM_TEXTURE_SZ)
#define GD_SURFACEFORMAT_LIN_A8L8				(CELL_GCM_TEXTURE_G8B8 | CELL_GCM_TEXTURE_LN)
#define GD_SURFACEFORMAT_G8R8					(CELL_GCM_TEXTURE_G8B8 | CELL_GCM_TEXTURE_SZ )
#define GD_SURFACEFORMAT_LIN_G8R8				(CELL_GCM_TEXTURE_G8B8 | CELL_GCM_TEXTURE_LN )
#define GD_SURFACEFORMAT_A8						(-1ul)
#define GD_SURFACEFORMAT_LIN_A8					(-1ul)
#define GD_SURFACEFORMAT_L8						( CELL_GCM_TEXTURE_B8 | CELL_GCM_TEXTURE_SZ | CELL_GCM_TEXTURE_NR )
#define GD_SURFACEFORMAT_LIN_L8					( CELL_GCM_TEXTURE_B8 | CELL_GCM_TEXTURE_LN | CELL_GCM_TEXTURE_NR )
#define GD_SURFACEFORMAT_DXT1					(CELL_GCM_TEXTURE_COMPRESSED_DXT1 | CELL_GCM_TEXTURE_SZ | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_DXT2					(-1ul)
#define GD_SURFACEFORMAT_DXT3					(CELL_GCM_TEXTURE_COMPRESSED_DXT23 | CELL_GCM_TEXTURE_SZ | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_DXT4					(-1ul)
#define GD_SURFACEFORMAT_DXT5					(CELL_GCM_TEXTURE_COMPRESSED_DXT45 | CELL_GCM_TEXTURE_SZ | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_W32Z32Y32X32			(CELL_GCM_TEXTURE_W32_Z32_Y32_X32_FLOAT | CELL_GCM_TEXTURE_LN)
#define GD_SURFACEFORMAT_W16Z16Y16X16			(CELL_GCM_TEXTURE_W16_Z16_Y16_X16_FLOAT | CELL_GCM_TEXTURE_LN)
#define GD_SURFACEFORMAT_R32F					(CELL_GCM_TEXTURE_X32_FLOAT | CELL_GCM_TEXTURE_SZ | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_LIN_R32F				(CELL_GCM_TEXTURE_X32_FLOAT | CELL_GCM_TEXTURE_LN | CELL_GCM_TEXTURE_NR)

#define GD_SURFACEFORMAT_DXN					(-1ul)
#define GD_SURFACEFORMAT_LIN_DXN				(-1ul)
#define GD_SURFACEFORMAT_LIN_DXT1				(-1ul)
#define GD_SURFACEFORMAT_LIN_DXT2				(-1ul)
#define GD_SURFACEFORMAT_LIN_DXT3				(-1ul)
#define GD_SURFACEFORMAT_LIN_DXT4				(-1ul)
#define GD_SURFACEFORMAT_LIN_DXT5				(-1ul)
#define GD_SURFACEFORMAT_A2R10G10B10			(-1ul)
#define GD_SURFACEFORMAT_A2B10G10R10F_EDRAM		(-1ul)
#define GD_SURFACEFORMAT_A16B16G16R16F			(CELL_GCM_TEXTURE_W16_Z16_Y16_X16_FLOAT | CELL_GCM_TEXTURE_SZ | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_A32B32G32R32F			(CELL_GCM_TEXTURE_W32_Z32_Y32_X32_FLOAT | CELL_GCM_TEXTURE_SZ | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_LIN_A16B16G16R16F		(CELL_GCM_TEXTURE_W16_Z16_Y16_X16_FLOAT | CELL_GCM_TEXTURE_LN | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_LIN_A32B32G32R32F		(CELL_GCM_TEXTURE_W32_Z32_Y32_X32_FLOAT | CELL_GCM_TEXTURE_LN | CELL_GCM_TEXTURE_NR)
#define GD_SURFACEFORMAT_A16B16G16R16			(-1ul)
#define GD_SURFACEFORMAT_D24FS8					(CELL_GCM_TEXTURE_DEPTH24_D8 | CELL_GCM_TEXTURE_SZ | CELL_GCM_TEXTURE_NR)

// ATI special
#define GD_SURFACEFORMAT_FOURCC_DF16			(-1ul)
#define GD_SURFACEFORMAT_FOURCC_DF24			(-1ul)

// Nvidia special
#define GD_SURFACEFORMAT_FOURCC_RAWZ			(-1ul)
#define GD_SURFACEFORMAT_FOURCC_INTZ			(-1ul)

#endif


#endif // __GRAPHICS_DEVICE_OPENGL__
