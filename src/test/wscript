#! /usr/bin/env python

import os
import Task
import TaskGen
from TaskGen import extension

Task.simple_task_type('proto_encode', "protoc -I ${proto_include} --encode=${proto_type} ${proto_file} < ${SRC} > ${TGT}",
                      color='PINK',
                      before='cc cxx')

@extension('.pf')
def pf_file(self, node):
        obj_ext = '.pfb'

        proto_encode = self.create_task('proto_encode')
        proto_encode.set_inputs(node)
        proto_encode.set_outputs(node.change_ext(obj_ext))
        curnode = self.path
        proto_file =  curnode.find_resource(self.proto_file)
        self.env['proto_file'] = proto_file.srcpath()
        self.env['proto_include'] = os.path.dirname(proto_file.srcpath())
        self.env['proto_type'] = self.proto_type

def build(bld):
    test_ddf = bld.new_task_gen(features = 'cxx cprogram ddf',
                                source = 'test_ddf.cpp test_ddf_proto.proto',
                                uselib = 'GTEST PROTOBUF DLIB',
                                uselib_local = 'ddf',
                                ddf_namespace = 'DUMMY',
                                proto_gen_cc = True,
                                proto_compile_cc = True,
                                proto_gen_java = True,
                                protoc_includes = '../ddf',
                                ddf_jar = 'test_ddf.jar',
                                # NOTE: default/... is hardcoded. How to solve?
                                classpath='default/src/ddf/generated' + os.pathsep + bld.env.PROTOBUF_JAR + os.pathsep + 'default/src/java',
                                includes = '. .. ../ddf',
                                target = 'test_ddf')
    test_ddf.install_path = None

