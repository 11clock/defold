#! /usr/bin/env python

import os
import Task
import TaskGen
from TaskGen import extension

Task.simple_task_type('proto_encode', "protoc -I ${proto_include} --encode=${proto_type} ${proto_file} < ${SRC} > ${TGT}", 
                      color='PINK', 
                      before='cc cxx')

@extension('.pf')
def pf_file(self, node):
        obj_ext = '.pfb'

        proto_encode = self.create_task('proto_encode')
        proto_encode.set_inputs(node)
        proto_encode.set_outputs(node.change_ext(obj_ext))
        curnode = self.path
        proto_file =  curnode.find_resource(self.proto_file)
        self.env['proto_file'] = proto_file.srcpath()
        self.env['proto_include'] = os.path.dirname(proto_file.srcpath())
        self.env['proto_type'] = self.proto_type

def build(bld):
    bld.new_task_gen(features = 'cxx cprogram',
                     source = 'test_ddf.cpp test_ddf_proto.proto',
                     uselib = 'GTEST PROTOBUF',
                     uselib_local = 'ddf',
                     ddf_namespace = 'DUMMY',
                     proto_gen_cc = True,
                     proto_compile_cc = True,
                     includes = '${blddir}',
                     target = 'test_ddf')

