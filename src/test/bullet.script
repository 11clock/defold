function init(self)
    -- properties
    self.group = 1
    self.mask = 2
    self.speed = 18
    self.impact_damage = 0.2
    self.hit_response = nil
end

function update(self)
    local rot = get_world_rotation(self)
    local expired = false
    if self.hit_response then
        expired = true
        post_named_to(self.hit_response.game_object_id, "", "hit", { damage = self.impact_damage })
    else
        local pos = get_world_position(self)
        -- prediction for CD
        local prev_pos = vec_math.vector3(pos)
        local velocity = vec_math.vector3(self.speed, 0, 0)
        local dp = vec_math.rotate(rot, velocity) * self.dt
        pos = pos + dp
        local next_pos = pos + dp
        set_position(self, pos)
        -- request ray cast
        post("ray_cast_request", {from = prev_pos, to = next_pos, ignored_game_object_id = self.id, mask = self.mask})
    end
    if expired then
        delete(self)
    end
end

function on_message(self, message_id, message)
    if message_id == hash("ray_cast_response") then
        self.hit_response = message
    end
end