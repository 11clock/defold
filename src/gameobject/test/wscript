import Task, TaskGen
from TaskGen import extension, declare_extension

def create_simple_protoc_task(name, ext, compiled_ext, type, before, shell = True, color = 'PINK', proto_file = '../src/gameobject/test/test_gameobject_ddf.proto'):
    def create(self, node):
        task = self.create_task(name)
        task.set_inputs(node)
        out = node.change_ext(compiled_ext)
        task.set_outputs(out)

    cmd = 'protoc --encode=%s -I ../src/gameobject/test -I ../src/gameobject/test/input -I ../proto -I ${DYNAMO_HOME}/share/proto -I ${DYNAMO_HOME}/ext/include %s < ${SRC} > ${TGT}' % (type, proto_file)
    Task.simple_task_type(name, cmd, before=before, shell=shell, color=color)
    declare_extension([ext], create)

create_simple_protoc_task('aresource', '.a_pb', '.a', 'TestGameObjectDDF.AResource', before='cc cxx', proto_file = '../src/gameobject/test/component/test_gameobject_component_ddf.proto')
create_simple_protoc_task('bresource', '.b_pb', '.b', 'TestGameObjectDDF.BResource', before='cc cxx', proto_file = '../src/gameobject/test/component/test_gameobject_component_ddf.proto')
create_simple_protoc_task('cresource', '.c_pb', '.c', 'TestGameObjectDDF.CResource', before='cc cxx', proto_file = '../src/gameobject/test/component/test_gameobject_component_ddf.proto')
create_simple_protoc_task('message_target', '.mt_pb', '.mt', 'TestGameObjectDDF.MessageTarget', before='cc cxx', proto_file = '../src/gameobject/test/message/test_gameobject_message_ddf.proto')
create_simple_protoc_task('input_target', '.it_pb', '.it', 'TestGameObjectDDF.InputTarget', before='cc cxx', proto_file = '../src/gameobject/test/input/test_gameobject_input_ddf.proto')
create_simple_protoc_task('collection', '.collection', '.collectionc', 'dmGameObjectDDF.CollectionDesc', before='cc cxx', proto_file = '../proto/gameobject_ddf.proto')

Task.simple_task_type('gameobjectdesc', 'protoc --encode=dmGameObjectDDF.PrototypeDesc -I ../proto -I ${DYNAMO_HOME}/ext/include -I ${DYNAMO_HOME}/share/proto ../proto/gameobject_ddf.proto < ${SRC} > ${TGT}',
                      color='PINK',
                      before='cc cxx',
                      shell=True)

@extension('.go_pb')
def testresourcecont_file(self, node):
    obj_ext = '.goc'
    task = self.create_task('gameobjectdesc')
    task.set_inputs(node)
    out = node.change_ext(obj_ext)
    task.set_outputs(out)

Task.simple_task_type('luascript', 'cat < ${SRC} > ${TGT}',
                      color='PINK',
                      before='cc cxx',
                      shell=True)

@extension('.script')
def testresourcecont_file(self, node):
    obj_ext = '.scriptc'
    task = self.create_task('luascript')
    task.set_inputs(node)
    out = node.change_ext(obj_ext)
    task.set_outputs(out)

def build(bld):
    test_gameobject = bld.new_task_gen(features = 'cxx cprogram',
                                     includes = '../../../src .',
                                     uselib = 'GTEST RESOURCE DDF DLIB PLATFORM_SOCKET PLATFORM_THREAD LUA SCRIPT',
                                     uselib_local = 'gameobject',
                                     proto_gen_py = True,
                                     target = 'test_gameobject',
                                     source = 'test_gameobject.cpp test_gameobject_ddf.proto')
    test_gameobject.find_sources_in_dirs('.', exts = ['.go_pb', '.pc_pb', '.script', '.a_pb', '.b_pb', '.c_pb', '.it_pb', '.collection'])
    test_gameobject.install_path = None

    test_gameobject_collection = bld.new_task_gen(features = 'cxx cprogram',
                                     includes = '../../../src .',
                                     uselib = 'GTEST RESOURCE DDF DLIB PLATFORM_SOCKET PLATFORM_THREAD LUA SCRIPT',
                                     uselib_local = 'gameobject',
                                     proto_gen_py = True,
                                     target = 'collection/test_gameobject_collection',
                                     source = 'collection/test_gameobject_collection.cpp')
    test_gameobject_collection.find_sources_in_dirs('collection', exts = ['.go_pb', '.script', '.collection'])
    test_gameobject_collection.install_path = None

    test_gameobject_component = bld.new_task_gen(features = 'cxx cprogram',
                                     includes = '../../../src .',
                                     uselib = 'GTEST RESOURCE DDF DLIB PLATFORM_SOCKET PLATFORM_THREAD LUA SCRIPT',
                                     uselib_local = 'gameobject',
                                     proto_gen_py = True,
                                     target = 'component/test_gameobject_component',
                                     source = 'component/test_gameobject_component.cpp component/test_gameobject_component_ddf.proto')
    test_gameobject_component.find_sources_in_dirs('component', exts = ['.go_pb', '.script', '.a_pb', '.b_pb', '.c_pb'])
    test_gameobject_component.install_path = None

    test_gameobject_delete = bld.new_task_gen(features = 'cxx cprogram',
                                     includes = '../../../src .',
                                     uselib = 'GTEST RESOURCE DDF DLIB PLATFORM_SOCKET PLATFORM_THREAD LUA SCRIPT',
                                     uselib_local = 'gameobject',
                                     proto_gen_py = True,
                                     target = 'delete/test_gameobject_delete',
                                     source = 'delete/test_gameobject_delete.cpp delete/test_gameobject_delete_ddf.proto')
    test_gameobject_delete.find_sources_in_dirs('delete', exts = ['.go_pb', '.script'])
    test_gameobject_delete.install_path = None

    test_gameobject_hierarchy = bld.new_task_gen(features = 'cxx cprogram',
                                     includes = '../../../src .',
                                     uselib = 'GTEST RESOURCE DDF DLIB PLATFORM_SOCKET PLATFORM_THREAD LUA SCRIPT',
                                     uselib_local = 'gameobject',
                                     proto_gen_py = True,
                                     target = 'hierarchy/test_gameobject_hierarchy',
                                     source = 'hierarchy/test_gameobject_hierarchy.cpp')
    test_gameobject_hierarchy.find_sources_in_dirs('hierarchy', exts = ['.go_pb', '.script'])
    test_gameobject_hierarchy.install_path = None

    test_gameobject_id = bld.new_task_gen(features = 'cxx cprogram',
                                     includes = '../../../src .',
                                     uselib = 'GTEST RESOURCE DDF DLIB PLATFORM_SOCKET PLATFORM_THREAD LUA SCRIPT',
                                     uselib_local = 'gameobject',
                                     proto_gen_py = True,
                                     target = 'id/test_gameobject_id')
    test_gameobject_id.find_sources_in_dirs('id', exts = ['.go_pb', '.script', '.cpp'])
    test_gameobject_id.install_path = None

    test_gameobject_input = bld.new_task_gen(features = 'cxx cprogram',
                                     includes = '../../../src .',
                                     uselib = 'GTEST RESOURCE DDF DLIB PLATFORM_SOCKET PLATFORM_THREAD LUA SCRIPT',
                                     uselib_local = 'gameobject',
                                     proto_gen_py = True,
                                     target = 'input/test_gameobject_input')
    test_gameobject_input.find_sources_in_dirs('input', exts = ['.go_pb', '.script', '.cpp', '.proto', '.it_pb'])
    test_gameobject_input.install_path = None

    test_gameobject_message = bld.new_task_gen(features = 'cxx cprogram',
                                     includes = '../../../src .',
                                     uselib = 'GTEST RESOURCE DDF DLIB PLATFORM_SOCKET PLATFORM_THREAD LUA SCRIPT',
                                     uselib_local = 'gameobject',
                                     proto_gen_py = True,
                                     target = 'message/test_gameobject_message')
    test_gameobject_message.find_sources_in_dirs('message', exts = ['.go_pb', '.script', '.cpp', '.proto', '.mt_pb'])
    test_gameobject_message.install_path = None

    test_gameobject_script = bld.new_task_gen(features = 'cxx cprogram',
                                     includes = '../../../src .',
                                     uselib = 'GTEST RESOURCE DDF DLIB PLATFORM_SOCKET PLATFORM_THREAD LUA SCRIPT',
                                     uselib_local = 'gameobject',
                                     proto_gen_py = True,
                                     target = 'script/test_gameobject_script',
                                     source = 'script/test_gameobject_script.cpp test_gameobject_ddf.proto')
    test_gameobject_script.find_sources_in_dirs('script', exts = ['.go_pb', '.script'])
    test_gameobject_script.install_path = None

    test_gameobject_spawn = bld.new_task_gen(features = 'cxx cprogram',
                                     includes = '../../../src . ../../../proto',
                                     uselib = 'GTEST RESOURCE DDF DLIB PLATFORM_SOCKET PLATFORM_THREAD LUA SCRIPT',
                                     uselib_local = 'gameobject',
                                     proto_gen_py = True,
                                     target = 'spawn/test_gameobject_spawn',
                                     source = 'spawn/test_gameobject_spawn.cpp spawn/test_spawn.go_pb spawn/test_spawn.script spawn/test_spawnee.go_pb')
    test_gameobject_spawn.install_path = None
