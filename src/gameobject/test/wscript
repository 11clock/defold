import Task, TaskGen
from TaskGen import extension, declare_extension

def create_simple_protoc_task(name, ext, compiled_ext, type, before, shell = True, color = 'PINK', proto_file = '../src/gameobject/test/test_gameobject_ddf.proto'):
    def create(self, node):
        task = self.create_task(name)
        task.set_inputs(node)
        out = node.change_ext(compiled_ext)
        task.set_outputs(out)

    cmd = 'protoc --encode=%s -I ../src/gameobject/test -I ../proto -I ${DYNAMO_HOME}/share/proto -I ${DYNAMO_HOME}/ext/include %s < ${SRC} > ${TGT}' % (type, proto_file)
    Task.simple_task_type(name, cmd, before=before, shell=shell, color=color)
    declare_extension([ext], create)

create_simple_protoc_task('aresource', '.a_pb', '.a', 'TestGameObject.AResource', before='cc cxx')
create_simple_protoc_task('bresource', '.b_pb', '.b', 'TestGameObject.BResource', before='cc cxx')
create_simple_protoc_task('cresource', '.c_pb', '.c', 'TestGameObject.CResource', before='cc cxx')
create_simple_protoc_task('physcomp', '.pc_pb', '.pc', 'TestGameObject.PhysComponent', before='cc cxx')
create_simple_protoc_task('event_target', '.et_pb', '.et', 'TestGameObject.EventTarget', before='cc cxx')
create_simple_protoc_task('collection', '.collection', '.collectionc', 'dmGameObject.CollectionDesc', before='cc cxx', proto_file = '../proto/gameobject_ddf.proto')

Task.simple_task_type('gameobjectdesc', 'protoc --encode=dmGameObject.PrototypeDesc -I ../proto -I ${DYNAMO_HOME}/ext/include -I ${DYNAMO_HOME}/share/proto ../proto/gameobject_ddf.proto < ${SRC} > ${TGT}',
                      color='PINK',
                      before='cc cxx',
                      shell=True)

@extension('.go_pb')
def testresourcecont_file(self, node):
    obj_ext = '.go'
    task = self.create_task('gameobjectdesc')
    task.set_inputs(node)
    out = node.change_ext(obj_ext)
    task.set_outputs(out)

Task.simple_task_type('luascript', 'cat < ${SRC} > ${TGT}',
                      color='PINK',
                      before='cc cxx',
                      shell=True)

@extension('.script')
def testresourcecont_file(self, node):
    obj_ext = '.scriptc'
    task = self.create_task('luascript')
    task.set_inputs(node)
    out = node.change_ext(obj_ext)
    task.set_outputs(out)

def build(bld):
    test_gameobject = bld.new_task_gen(features = 'cxx cprogram',
                                     includes = '../../../src .',
                                     uselib = 'GTEST RESOURCE DDF DLIB PLATFORM_SOCKET PLATFORM_THREAD LUA',
                                     uselib_local = 'gameobject script',
                                     proto_gen_py = True,
                                     target = 'test_gameobject',
                                     source = 'test_gameobject.cpp test_gameobject_ddf.proto')
    test_gameobject.find_sources_in_dirs('.', exts = ['.go_pb', '.pc_pb', '.script', '.a_pb', '.b_pb', '.c_pb', '.et_pb', '.collection'])
    test_gameobject.install_path = None

    test_script = bld.new_task_gen(features = 'cxx cprogram',
                                     includes = '../../../src',
                                     uselib = 'GTEST RESOURCE DDF DLIB PLATFORM_SOCKET PLATFORM_THREAD LUA',
                                     uselib_local = 'gameobject script',
                                     proto_gen_py = True,
                                     target = 'test_script',
                                     source = 'test_script.cpp')

    test_script.install_path = None

    test_script_util = bld.new_task_gen(features = 'cxx cprogram',
                                        includes = '../../../src',
                                        uselib = 'GTEST RESOURCE DDF DLIB PLATFORM_SOCKET PLATFORM_THREAD LUA',
                                        uselib_local = 'gameobject script',
                                        proto_gen_py = True,
                                        target = 'test_script_util',
                                        source = 'test_script_util.cpp test_gameobject_ddf.proto')

    test_script_util.install_path = None



