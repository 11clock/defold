function init(self)
    assert(go.get_id(self) == hash("my_object01"), "init id mismatch")
    local p = go.get_position(self)
    assert(p.x == 0)
    assert(p.y == 0)
    assert(p.z == 0)

    self.counter = 0
    assert(self.counter == 0)

    self.counter = self.counter +  1
    assert(self.counter == 1)
    tmp = "1";
end

function update(self, dt)
    assert(go.get_id(self) == hash("my_object01"), "update id mismatch")
    assert(dt > 0, "no dt in update")
    assert(self.counter == 1)

    local p = go.get_position(self)

    p.y = 123.0
    go.set_position(self, p)

    p = go.get_position(self)
    assert(p.y == 123.0)

    go.post("spawn", {prototype = "test", pos = vmath.vector3(1, 2, 3)} )
end

function on_message(self, message_id, message)
    assert(go.get_id(self) == hash("my_object01"), "on_message id mismatch")
    assert(message_id == hash("spawn_result"))
    assert(message.status == 1010)
end

function on_input(self, action_id, action)
    assert(go.get_id(self) == hash("my_object01"), "on_input id mismatch")
    assert(action_id == hash("test_action"), "on_input action id mismatch")
end
