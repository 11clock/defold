#! /usr/bin/env python

import os, sys
import waf_graphics, waf_dynamo

def set_options(opt):
    pass

def build(bld):
    obj = bld.new_task_gen(features = 'cxx cstaticlib',
                           includes = ['. opengl'],
                           proto_gen_py = True,
                           target = 'graphics',
                           install_path='${PREFIX}/lib')

    obj.find_sources_in_dirs('opengl ../proto')

    bld.install_files('${PREFIX}/include/graphics/', 'graphics_device.h')
    bld.install_files('${PREFIX}/include/graphics/opengl', 'opengl/opengl_device_defines.h')
    bld.install_files('${PREFIX}/include/graphics/', 'vertexprogram_defines.h')

    bld.install_files('${PREFIX}/bin', 'ddsc.py')
    bld.install_files('${PREFIX}/lib/python', 'dds.py')
    bld.install_files('${PREFIX}/lib/python', 'waf_graphics.py')


def configure(conf):
    waf_dynamo.configure(conf)

    if sys.platform == "darwin":
        platform = "darwin"
    elif sys.platform == "linux2":
        platform = "linux"
    elif sys.platform == "win32":
        platform = "win32"
    else:
        conf.fatal("Unable to determine platform")

    if platform == "darwin":
        conf.env.append_value('LINKFLAGS', ['-framework', 'Cocoa', '-framework', 'OpenGL', '-lSDLmain', '-lSDL'])
    if platform == "linux":
        conf.env.append_value('LINKFLAGS', ['-lglut', '-lXext', '-lX11', '-lXi', '-lGL', '-lGLU', '-lSDL'])
    if platform == "win32":
       conf.env.append_value('LINKFLAGS', ['/SUBSYSTEM:WINDOWS', 'SDL.lib', 'SDLmain.lib', 'opengl32.lib'])

    conf.env.append_value('CPPPATH', ".")
    conf.env.append_value('CXXDEFINES', "DDF_EXPOSE_DESCRIPTORS")
    




