#! /usr/bin/env python

import os, sys
import waf_graphics, waf_dynamo

def set_options(opt):
    pass

def build(bld):
    obj = bld.new_task_gen(features = 'cxx cstaticlib',
                           includes = ['.', '../build/default/proto'],
                           proto_gen_py = True,
                           target = 'render',
                           install_path='${PREFIX}/lib')
    obj.find_sources_in_dirs('. ../proto/render model')
    #obj.source.append('../proto/render_ddf.proto')

    obj = bld.new_task_gen(features = 'cxx cstaticlib',
                           includes = '.',
                           proto_gen_py = True,
                           target = 'render_debug',
                           install_path='${PREFIX}/lib')
    obj.find_sources_in_dirs('debug')

    bld.install_files('${PREFIX}/include/render', 'fontrenderer.h')
    bld.install_files('${PREFIX}/include/render_debug', 'debug/debugrenderer.h')
    bld.install_files('${PREFIX}/include/render/model', 'model/model.h')
    bld.install_files('${PREFIX}/include/render', 'rendercontext.h')
    bld.install_files('${PREFIX}/include/render', 'material.h')

    bld.install_files('${PREFIX}/bin', 'fontc.py')
    bld.install_files('${PREFIX}/lib/python', 'waf_render.py')

    bld.install_files('${PREFIX}/share/proto', '../proto/render/material_ddf.proto')
    bld.install_files('${PREFIX}/share/proto', '../proto/render/render_ddf.proto')
    bld.install_files('${PREFIX}/share/proto', '../proto/render/mesh_ddf.proto')
    bld.install_files('${PREFIX}/share/proto', '../proto/render/model_ddf.proto')

# need to sort out shader include dirs before we can reenable this one
#    test_app = bld.new_task_gen(
#        features = 'cxx cprogram',
#        uselib = 'graphics',
#        uselib_local = 'render',
#        target = 'test_app')
#    test_app.find_sources_in_dirs('test')
#    test_app.install_path = None


def configure(conf):
    pass




