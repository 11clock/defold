#! /usr/bin/env python

def build(bld):
    obj = bld.new_task_gen(features = 'cxx cstaticlib',
                           includes = ['. opengl'],
                           proto_gen_py = True,
                           target = 'graphics')
    obj.find_sources_in_dirs('. opengl ../proto')

    bld.install_files('${PREFIX}/include/graphics', 'graphics_device.h')
    bld.install_files('${PREFIX}/include/graphics/opengl', 'opengl/opengl_device.h')
    bld.install_files('${PREFIX}/include/graphics/opengl', 'opengl/opengl_device_defines.h')

    bld.install_files('${PREFIX}/bin', 'ddsc.py')
    bld.install_files('${PREFIX}/lib/python', 'dds.py')


    obj = bld.new_task_gen(
        features = 'cxx cprogram',
        target = 'test_app',
        source = "test/test_app.cpp")
    obj.find_sources_in_dirs('opengl')

def configure(conf):
    if sys.platform == "darwin":
        platform = "darwin"
    elif sys.platform == "linux2":
        platform = "linux"
    elif sys.platform == "win32":
        platform = "win32"
    else:
        conf.fatal("Unable to determine platform")

    if platform == "darwin":
        conf.env.append_value('LINKFLAGS', '-framework SDL -framework Cocoa -framework OpenGL -lSDLmain')
    if platform == "linux":
        conf.env.append_value('LINKFLAGS', '-lglut -lXext -lX11 -lXi -lGL -lGLU -lSDL')

